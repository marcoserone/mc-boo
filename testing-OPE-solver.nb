(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     97883,       2464]
NotebookOptionsPosition[     95167,       2394]
NotebookOutlinePosition[     95521,       2410]
CellTagsIndexPosition[     95478,       2407]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Define", " ", "symmetric", " ", "quantization", " ", 
  "rho"}]], "Input",ExpressionUUID->"fc075a62-b024-4e60-9ef6-b110ebac46d6"],

Cell[BoxData[{
 RowBox[{"CleanSlate", ";"}], "\n", 
 RowBox[{
  RowBox[{"$MinPrecision", "=", "MachinePrecision"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]z", "[", "z_", "]"}], " ", ":=", " ", 
    RowBox[{"z", "/", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", "2"}]}]}], 
   ";"}], " "}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]zb", "[", "z_", "]"}], " ", ":=", " ", 
    RowBox[{"\[Rho]z", "[", 
     RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ";"}], " ", "\n", " ", 
  RowBox[{"(*", 
   RowBox[{"error", " ", "estimates"}], "*)"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]intErrorEstimateG", "[", 
     RowBox[{"d_", ",", " ", "DDs_", ",", " ", "z_", ",", " ", "\[Gamma]_"}], 
     "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", " ", "+", " ", 
           RowBox[{"4", "*", "d"}]}], ")"}]}], "*", 
        RowBox[{"\[Beta]", "^", 
         RowBox[{"(", 
          RowBox[{"\[Gamma]", " ", "-", " ", 
           RowBox[{"4", "*", "d"}]}], ")"}]}], "*", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"1", " ", "-", " ", "\[Gamma]", " ", "+", " ", 
           RowBox[{"4", "*", "d"}]}], ",", " ", 
          RowBox[{"\[Beta]", "*", "DDs"}]}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"1", " ", "-", " ", "\[Gamma]", " ", "+", " ", 
          RowBox[{"4", "*", "d"}]}], "]"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{"r", "^", "2"}]}], ")"}], "^", "\[Gamma]"}]}], ")"}]}], "/.",
      "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", "->", " ", 
        RowBox[{"Abs", "[", 
         RowBox[{"\[Rho]z", "[", "z", "]"}], "]"}]}], ",", " ", 
       RowBox[{"\[Beta]", " ", "->", " ", 
        RowBox[{"-", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"\[Rho]z", "[", "z", "]"}], "]"}], "]"}]}]}]}], "}"}]}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"      ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]intErrorEstimateFt", "[", 
     RowBox[{"d_", ",", " ", "DDs_", ",", " ", "z_", ",", " ", "\[Gamma]_"}], 
     "]"}], " ", ":=", " ", "\n", "     ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"v", "^", "d"}], "*", 
       RowBox[{"\[Rho]intErrorEstimateG", "[", 
        RowBox[{"d", ",", " ", "DDs", ",", " ", "z", ",", " ", "\[Gamma]"}], 
        "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"u", "^", "d"}], "*", 
       RowBox[{"\[Rho]intErrorEstimateG", "[", 
        RowBox[{"d", ",", " ", "DDs", ",", " ", 
         RowBox[{"1", " ", "-", " ", "z"}], ",", " ", "\[Gamma]"}], "]"}]}]}],
      " ", "/.", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", " ", "->", " ", 
        RowBox[{"z", "*", 
         RowBox[{"Conjugate", "[", "z", "]"}]}]}], ",", " ", 
       RowBox[{"v", " ", "->", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", "z"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}]}]}], "}"}]}]}], 
   ";"}], " ", "\n", "     ", 
  RowBox[{"(*", 
   RowBox[{"coefficients", " ", "and", " ", "prefactors"}], "*)"}]}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"kfunctAna", "[", 
     RowBox[{"\[Beta]_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Beta]", "/", "2"}], ")"}], "*", 
       RowBox[{"Log", "[", 
        RowBox[{"4", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", " ", "-", " ", "x"}], "]"}]}], ")"}], "^", "2"}], 
           "/", "x"}], ")"}]}], "]"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"x", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", "x"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", " ", "-", " ", "x"}], "]"}]}], ")"}]}], ")"}]}], 
      ")"}]}]}], ";"}], " "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"ConformalBlockAna", "[", 
     RowBox[{"DD_", ",", " ", "l_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "l"}], "/", 
       RowBox[{"2", "^", "l"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "*", 
         RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", " ", "-", " ", 
         RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"kfunctAna", "[", 
         RowBox[{
          RowBox[{"DD", " ", "+", " ", "l"}], ",", " ", "z"}], "]"}], "*", 
        RowBox[{"kfunctAna", "[", 
         RowBox[{
          RowBox[{"DD", " ", "-", " ", "l", " ", "-", " ", "2"}], ",", " ", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "-", " ", 
       "\n", "       ", 
       RowBox[{
        RowBox[{"kfunctAna", "[", 
         RowBox[{
          RowBox[{"DD", " ", "+", " ", "l"}], ",", " ", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}], "*", 
        RowBox[{"kfunctAna", "[", 
         RowBox[{
          RowBox[{"DD", " ", "-", " ", "l", " ", "-", " ", "2"}], ",", " ", 
          "z"}], "]"}]}]}], ")"}]}]}], ";"}], "\n", "       ", 
  RowBox[{"(*", "derivatives", "*)"}]}], "\n", 
 RowBox[{"       ", 
  RowBox[{
   RowBox[{
    RowBox[{"FAnaDer", "[", 
     RowBox[{"DD_", ",", " ", "l_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"z", " ", "-", " ", 
         RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"2", "*", "l"}], ")"}]}], "*", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", "z"}], ")"}], "*", "z", "*", "\n", "      ", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "*", 
     RowBox[{"Conjugate", "[", "z", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "5"}], " ", "+", " ", 
               RowBox[{"2", "*", "DD"}]}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", 
                 RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], "*", "l"}], " ", "+", " ", "DD"}], 
                ")"}]}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", "z"}], ")"}], "*", "\n", 
            "          ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{"1", " ", "+", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
              ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", "2"}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], "*", "l"}], " ", "+", " ", "DD"}], 
                ")"}]}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
                RowBox[{"(", 
                 RowBox[{"2", "*", "l"}], ")"}]}]}], " ", "-", " ", "\n", 
              "           ", 
              RowBox[{
               RowBox[{"Sqrt", "[", "z", "]"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "l"}], ")"}]}], " ", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
                   ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "l"}], ")"}]}]}], ")"}]}], " ", "+", " ",
               "\n", "           ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", " ", "-", " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", " ", "+", " ", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
                ")"}], "^", 
               RowBox[{"(", 
                RowBox[{"2", "*", "l"}], ")"}]}], " ", "+", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "l"}], ")"}]}], " ", "+", " ", "\n", 
                 "             ", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", "z", "]"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"2", "*", "l"}], ")"}]}], " ", "-", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
                    ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"2", "*", "l"}], ")"}]}]}], ")"}]}], " ", "+", 
                 " ", "\n", "             ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
                   ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"2", "*", "l"}], ")"}]}]}], ")"}], "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "*", "\n", 
            "          ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Log", "[", "16", "]"}], " ", "+", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}]}], ")"}]}], 
               "]"}], " ", "+", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], " ", "+", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", " ", "+", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}]}], 
                 ")"}]}], "]"}]}], ")"}]}], ")"}], "/", "\n", "         ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], " ", "+", " ", 
               RowBox[{"Sqrt", "[", "z", "]"}]}], ")"}], "^", "2"}], "*", 
            RowBox[{"z", "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"Conjugate", "[", "z", "]"}], "]"}]}], ")"}], "^", 
             "2"}], "*", 
            RowBox[{
             RowBox[{"Conjugate", "[", "z", "]"}], "^", 
             RowBox[{"(", 
              RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], ")"}]}], " ", "+", 
       " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "5"}], " ", "+", " ", 
             RowBox[{"2", "*", "DD"}]}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", 
              "2"}], "/", "z"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "*", "l"}], " ", "+", " ", "DD"}], 
              ")"}]}], ")"}]}], "*", "z", "*", "\n", "         ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", " ", "-", " ", 
                  RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "^",
               "2"}], "/", 
             RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "*", "l"}], " ", "+", " ", "DD"}], 
              ")"}]}], ")"}]}], "*", 
          RowBox[{"Conjugate", "[", "z", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], "*", "z", "*", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], " ", "+", " ",
                     "z"}], ")"}], "/", "z"}], ")"}]}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"2", "*", "l"}], ")"}]}], "*", "\n", "           ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}]}], 
            " ", "+", " ", 
            RowBox[{
             RowBox[{"Conjugate", "[", "z", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], " ", "+", " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "+",
                     " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], 
                 "^", 
                 RowBox[{"(", 
                  RowBox[{"2", "*", "l"}], ")"}]}]}], " ", "+", " ", "\n", 
               "            ", 
               RowBox[{"z", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], " ", "+", " ",
                     "z"}], ")"}], "/", "z"}], ")"}]}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"2", "*", "l"}], ")"}]}]}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "+",
                     " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], 
                   "^", 
                   RowBox[{"(", 
                    RowBox[{"2", "*", "l"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
           ")"}], "*", "\n", "         ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Log", "[", "16", "]"}], " ", "+", " ", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], " ", "+", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", 
               "2"}], "/", "z"}], "]"}], " ", "+", " ", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], " ", "+", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"1", " ", "-", " ", 
                   RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], 
               "^", "2"}], "/", 
              RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}]}], ")"}],
         "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], " ", "+", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", "3"}], 
          "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", "z"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], "*", "\n", "         ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], " ", "+", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", " ", "-", " ", 
               RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "^", 
           "3"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"\t ", 
  RowBox[{
   RowBox[{
    RowBox[{"ConformalBlockAnaDer", "[", 
     RowBox[{"DD_", ",", " ", "l_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
    "\n", "     ", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", "l"}], "*", 
         RowBox[{"2", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], " ", "-", " ", "l", " ", "+", " ", 
            RowBox[{"2", "*", "DD"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", "2"}],
             "/", "z"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "l"}], " ", "+", " ", "DD"}], ")"}]}], ")"}]}], 
         "*", 
         RowBox[{
          RowBox[{"Abs", "[", "z", "]"}], "^", "4"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "^", 
             "2"}], "/", 
            RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "^", "\n", 
          "         ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "l"}], " ", "+", " ", "DD"}], ")"}]}], ")"}]}], 
         "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", "*", "z", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], " ", "+", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "*", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "+", " ", 
                   RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "+",
                    " ", 
                   RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
                 RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], "^", 
             "l"}]}], " ", "+", " ", "\n", "         ", 
           RowBox[{
            RowBox[{"Conjugate", "[", "z", "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], " ", "+", " ", 
                 RowBox[{"Sqrt", "[", 
                  RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], " ", "+", " ",
                     "z"}], ")"}], "/", "z"}], ")"}]}], ")"}], "^", "l"}]}], 
              " ", "+", " ", 
              RowBox[{"z", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], " ", "+", " ",
                     "z"}], ")"}], "/", "z"}], ")"}]}], ")"}], "^", "l"}]}], 
                 " ", "+", " ", "\n", "             ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "+", " ", 
                    RowBox[{"2", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", " ", "-", " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "+",
                     " ", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
                    RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], 
                  "^", "l"}]}], ")"}]}]}], ")"}]}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"16", "*", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], " ", "+", " ", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", 
                "2"}]}], ")"}], "/", "z"}], "]"}], " ", "+", " ", "\n", 
           "         ", 
           RowBox[{"Log", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", " ", "-", " ", 
                  RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "^",
               "2"}], "/", 
             RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}]}], ")"}], 
       "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], " ", "+", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", " ", "-", " ", "z"}], "]"}]}], ")"}], "^", "3"}], 
         "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", "z"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], " ", "+", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], ")"}], "^", 
          "3"}], "*", "\n", "        ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"Im", "[", "z", "]"}]}], ")"}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"kfunct", "[", 
     RowBox[{"\[Beta]_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"kfunct", "[", 
      RowBox[{"\[Beta]", ",", " ", "x"}], "]"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"\[Beta]", "/", "2"}], ")"}]}], "*", 
      RowBox[{"Hypergeometric2F1", "[", 
       RowBox[{
        RowBox[{"\[Beta]", "/", "2"}], ",", " ", 
        RowBox[{"\[Beta]", "/", "2"}], ",", " ", "\[Beta]", ",", " ", "x"}], 
       "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{"    ", 
  RowBox[{
   RowBox[{
    RowBox[{"ConformalBlock", "[", 
     RowBox[{"DD_", ",", " ", "l_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "l"}], "/", 
       RowBox[{"2", "^", "l"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "*", 
         RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", " ", "-", " ", 
         RowBox[{"Conjugate", "[", "z", "]"}]}], ")"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"kfunct", "[", 
         RowBox[{
          RowBox[{"DD", " ", "+", " ", "l"}], ",", " ", "z"}], "]"}], "*", 
        RowBox[{"kfunct", "[", 
         RowBox[{
          RowBox[{"DD", " ", "-", " ", "l", " ", "-", " ", "2"}], ",", " ", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}]}], " ", "-", " ", 
       "\n", "       ", 
       RowBox[{
        RowBox[{"kfunct", "[", 
         RowBox[{
          RowBox[{"DD", " ", "+", " ", "l"}], ",", " ", 
          RowBox[{"Conjugate", "[", "z", "]"}]}], "]"}], "*", 
        RowBox[{"kfunct", "[", 
         RowBox[{
          RowBox[{"DD", " ", "-", " ", "l", " ", "-", " ", "2"}], ",", " ", 
          "z"}], "]"}]}]}], ")"}]}]}], ";"}], " ", "\n", "      ", "\n", 
  "      ", 
  RowBox[{"(*", 
   RowBox[{"random", " ", "sample", " ", "of", " ", "z", " ", "around", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"1", "/", "2"}], "+", "I0"}], ")"}]}], "*)"}]}], "\n", 
 RowBox[{"           ", 
  RowBox[{
   RowBox[{
    RowBox[{"Sample", "[", 
     RowBox[{"nz_", ",", "var_", ",", "seed_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "imax", "}"}], ",", " ", 
      RowBox[{
       RowBox[{"SeedRandom", "[", "seed", "]"}], ";", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{"NormalDistribution", "[", 
             RowBox[{"0", ",", " ", "var"}], "]"}], "]"}], "]"}], "+", "\n", 
          "           ", 
          RowBox[{"1", "/", "2"}], "+", 
          RowBox[{"I", " ", 
           RowBox[{"Abs", "[", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", " ", "var"}], "]"}], "]"}], "]"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"imax", ",", "1", ",", "nz"}], "}"}]}], "]"}]}]}], "]"}]}], 
   ";"}], " ", "\n", 
  RowBox[{"(*", 
   RowBox[{"Exponential", " ", "factor", " ", "to", " ", "renormalize"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dimExpFactor", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"Log", "[", 
     RowBox[{"4", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"1", "/", "2"}], " ", "-", "a", " ", "-", "b"}], "]"}]}], 
         ")"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "2"}], " ", "+", " ", "a", " ", "+", "b"}], 
        ")"}]}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"renomFactor", "[", "dim_", "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"dim", "-", "1"}], ")"}]}], 
      RowBox[{"dimExpFactor", "[", 
       RowBox[{"0", ",", "0"}], "]"}]}], "]"}]}], ";"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"renomFactor", "[", "dim_", "]"}], ":=", "1"}], ";"}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"Conformal", " ", "Blocks"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"qQGen", "[", 
    RowBox[{
    "\[CapitalDelta]\[Phi]_", ",", "\[CapitalDelta]_", ",", "L_", ",", 
     "zsample_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"renomFactor", "[", "\[CapitalDelta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", "zsample"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{"Conjugate", "[", "zsample", "]"}]}], ")"}]}], ")"}], "^",
         "\[CapitalDelta]\[Phi]"}], "    ", 
       RowBox[{"ConformalBlock", "[", 
        RowBox[{"\[CapitalDelta]", ",", " ", "L", " ", ",", " ", "zsample"}], 
        "]"}]}], "-", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "zsample", ")"}], "*", 
          RowBox[{"(", " ", 
           RowBox[{"Conjugate", "[", "zsample", "]"}], ")"}]}], ")"}], "^", 
        "\[CapitalDelta]\[Phi]"}], " ", 
       RowBox[{"ConformalBlock", "[", 
        RowBox[{"\[CapitalDelta]", ",", " ", "L", ",", 
         RowBox[{"1", "-", " ", "zsample"}]}], "]"}]}]}], ")"}], 
    RowBox[{"2", "^", 
     RowBox[{"(", "L", ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"qQGenDims", "[", 
   RowBox[{"\[CapitalDelta]\[Phi]_", ",", "\[CapitalDelta]L_", ",", "z_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"qQGen", "[", 
     RowBox[{"1", ",", 
      RowBox[{"#1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"#1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", " ", "z"}], "]"}], "&"}], "/@", 
   "\[CapitalDelta]L"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MetroGoFixedSelectiveDir", "[", 
    RowBox[{
    "\[CapitalDelta]\[Phi]_", ",", "\[CapitalDelta]LOriginal_", ",", "Ndit_", 
     ",", "prec_", ",", "betad_", ",", "seed_", ",", "sigmaMC_", ",", 
     "dcross_", ",", "lmax_", ",", "idTag_", ",", "initialOps_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "itd", ",", " ", "DDldata", ",", " ", "sigmaz", ",", " ", "sigmaD", ",",
        " ", 
       RowBox[{"Action", "=", "100000000"}], ",", " ", 
       RowBox[{"Actionnew", "=", "0"}], ",", " ", "Action0", ",", " ", 
       "DDldatafixed", ",", " ", "QQ0", ",", " ", "QQ1", ",", " ", "str", ",",
        " ", "Lmax", ",", " ", "Nvmax", ",", " ", "rr", ",", " ", "metcheck", 
       ",", " ", "sigmaDini", ",", " ", "\n", "    ", "zsample", ",", " ", 
       "Idsample", ",", " ", "Nz", ",", " ", "PP0", ",", " ", "PP1", ",", " ",
        "lr", ",", " ", "nr", ",", " ", "Errvect", ",", " ", "Factor", ",", 
       " ", "Factor0", ",", " ", "ppm", ",", " ", "DDldataEx", ",", " ", 
       "PPEx", ",", " ", "QQEx", ",", " ", "Idsampleold", ",", " ", "ip", ",",
        " ", "nvmax", ",", " ", "QQFold", ",", "  ", "\n", "    ", 
       "IdsampleEx", ",", "zOPE", ",", "QQOPE", ",", "Calc", ",", "coeffTemp",
        ",", "Ident", ",", "OPEcoeff", ",", "ActionTot", ",", "  ", "TotD", 
       " ", ",", "DDldataold", ",", "QQold", ",", "\[CapitalDelta]LOld", ",", 
       "dimToVary", ",", "PP", ",", "QQsave", ",", "\[CapitalDelta]L", ",", 
       "dw", ",", "smearedaction"}], "}"}], ",", " ", "\n", "    ", 
     RowBox[{"(*", "precision", "*)"}], "\n", 
     RowBox[{
      RowBox[{"SetOptions", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"RandomReal", ",", "RandomVariate"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "->", "prec"}]}], "]"}], ";", "\n", 
      RowBox[{"$MaxPrecision", "=", "prec"}], ";", "\n", 
      RowBox[{"$MinPrecision", "=", "prec"}], ";", "\n", "\n", "    ", 
      RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\n", "    ", 
      RowBox[{"Nz", "=", 
       RowBox[{
        RowBox[{"Length", "[", "\[CapitalDelta]LOriginal", "]"}], "+", 
        "1"}]}], ";", "\n", "  ", 
      RowBox[{"zsample", " ", "=", " ", 
       RowBox[{"Sample", "[", 
        RowBox[{"Nz", ",", 
         RowBox[{"1", "/", "100"}], ",", "seed"}], "]"}]}], ";", " ", "\n", 
      RowBox[{"Idsample", " ", "=", " ", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"zsample", "[", 
                RowBox[{"[", "zv", "]"}], "]"}], "*", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"zsample", "[", 
                 RowBox[{"[", "zv", "]"}], "]"}], "]"}]}], ")"}], "^", 
             "\[CapitalDelta]\[Phi]"}], " ", "-", "\n", "        ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"zsample", "[", 
                  RowBox[{"[", "zv", "]"}], "]"}]}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", " ", "-", " ", 
                 RowBox[{"Conjugate", "[", 
                  RowBox[{"zsample", "[", 
                   RowBox[{"[", "zv", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], 
             "^", "\[CapitalDelta]\[Phi]"}]}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"zv", ",", " ", "1", ",", " ", "Nz"}], "}"}]}], "]"}], 
         ",", "prec"}], "]"}]}], ";", "\n", "    ", 
      RowBox[{"\[CapitalDelta]L", " ", "=", " ", "\[CapitalDelta]LOriginal"}],
       ";", "\n", "  ", 
      RowBox[{
       RowBox[{"\[CapitalDelta]L", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"\[CapitalDelta]L", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "prec"}], "]"}]}], 
      ";", "\n", "  ", "\n", "\n", "    ", 
      RowBox[{"QQ0", " ", "=", " ", 
       RowBox[{"qQGenDims", "[", 
        RowBox[{
        "\[CapitalDelta]\[Phi]", ",", "\[CapitalDelta]L", ",", "zsample"}], 
        "]"}]}], ";", "\n", "     ", "\n", "    ", 
      RowBox[{"(*", 
       RowBox[{"Monte", " ", "Carlo", " ", "Iteration"}], "*)"}], "\n", 
      RowBox[{"TotD", " ", "=", "   ", 
       RowBox[{"Reap", "[", " ", 
        RowBox[{"Do", "[", "\n", 
         RowBox[{
          RowBox[{
           RowBox[{"$MinPrecision", "=", "prec"}], ";", "\n", "          ", 
           RowBox[{"\[CapitalDelta]LOld", "=", "\[CapitalDelta]L"}], ";", 
           "\n", "          ", 
           RowBox[{"QQold", "=", "QQ0"}], ";", "  ", "\n", "\n", 
           RowBox[{"(*", 
            RowBox[{
            "let", " ", "every", " ", "successive", " ", "run", " ", "start", 
             " ", "by", " ", "varying", " ", "only", " ", "the", " ", "new", 
             " ", "operator"}], "*)"}], "\n", "        ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"it", "<", 
               RowBox[{"Ndit", "/", "10"}]}], "&&", " ", 
              RowBox[{"Nz", "!=", 
               RowBox[{"initialOps", "+", "1"}]}]}], ",", 
             RowBox[{"dimToVary", "=", 
              RowBox[{"Nz", "-", "1"}]}], ",", "  ", 
             RowBox[{"dimToVary", " ", "=", " ", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "lmax"}], "}"}], "]"}]}]}], "]"}], ";", 
           "\n", "       ", 
           RowBox[{"(*", 
            RowBox[{
            "Shift", " ", "one", " ", "dimension", " ", "by", " ", "a", " ", 
             "random", " ", "amount"}], "*)"}], "       ", "\n", "          ", 
           RowBox[{
            RowBox[{"\[CapitalDelta]L", "[", 
             RowBox[{"[", 
              RowBox[{"dimToVary", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"\[CapitalDelta]L", "[", 
              RowBox[{"[", 
               RowBox[{"dimToVary", ",", "1"}], "]"}], "]"}], "+", " ", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"NormalDistribution", "[", 
               RowBox[{"0", ",", " ", "sigmaMC"}], "]"}], "]"}]}]}], ";", 
           "\n", 
           RowBox[{"(*", 
            RowBox[{"Reevaluate", " ", "coefficients"}], "*)"}], "\n", 
           "           ", 
           RowBox[{
            RowBox[{"QQ0", "[", 
             RowBox[{"[", "dimToVary", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"qQGen", "[", 
             RowBox[{"\[CapitalDelta]\[Phi]", ",", 
              RowBox[{
               RowBox[{"\[CapitalDelta]L", "[", 
                RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"\[CapitalDelta]L", "[", 
                RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "zsample"}], "]"}]}], ";",
            "\n", "          ", "\n", "    ", 
           RowBox[{"(*", 
            RowBox[{
            "Coefficients", " ", "for", " ", "LES", " ", "and", " ", "action",
              " ", "thence"}], "*)"}], "\n", "          ", 
           RowBox[{"PP", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{"QQ0", ",", " ", 
              RowBox[{"{", "Idsample", "}"}]}], "]"}]}], ";", " ", "\n", 
           "          ", 
           RowBox[{"Actionnew", " ", "=", " ", 
            RowBox[{"Log", "[", 
             RowBox[{
              RowBox[{"Det", "[", "PP", "]"}], "^", "2"}], "]"}]}], ";", " ", 
           "\n", 
           RowBox[{"QQsave", "=", "QQ0"}], ";", "\n", 
           RowBox[{"(*", 
            RowBox[{"Brot", " ", "noch", " ", 
             RowBox[{"schmieren", "?"}]}], " ", "*)"}], "\n", 
           RowBox[{"smearedaction", "=", 
            RowBox[{"Reap", "[", 
             RowBox[{"Table", "[", "\n", "           ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"QQ0", "[", 
                  RowBox[{"[", "dimToVary", "]"}], "]"}], " ", "=", 
                 RowBox[{"qQGen", "[", 
                  RowBox[{"\[CapitalDelta]\[Phi]", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[CapitalDelta]L", "[", 
                    RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "+", "dcross"}], ",", 
                   RowBox[{
                    RowBox[{"\[CapitalDelta]L", "[", 
                    RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "zsample"}], "]"}]}],
                 ";", "  ", 
                RowBox[{"PP", " ", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"QQ0", ",", " ", 
                   RowBox[{"{", "Idsample", "}"}]}], "]"}]}], ";", " ", "\n", 
                "          ", 
                RowBox[{"Sow", "[", " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{
                   RowBox[{"Det", "[", "PP", "]"}], "^", "2"}], "]"}], "]"}], 
                ";", "\n", "           ", 
                RowBox[{
                 RowBox[{"QQ0", "[", 
                  RowBox[{"[", "dimToVary", "]"}], "]"}], " ", "=", 
                 RowBox[{"qQGen", "[", 
                  RowBox[{"\[CapitalDelta]\[Phi]", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"\[CapitalDelta]L", "[", 
                    RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "-", "dcross"}], ",", 
                   RowBox[{
                    RowBox[{"\[CapitalDelta]L", "[", 
                    RowBox[{"[", "dimToVary", "]"}], "]"}], "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "zsample"}], "]"}]}],
                 ";", "  ", 
                RowBox[{"PP", " ", "=", " ", 
                 RowBox[{"Join", "[", 
                  RowBox[{"QQ0", ",", " ", 
                   RowBox[{"{", "Idsample", "}"}]}], "]"}]}], ";", " ", "\n", 
                "          ", 
                RowBox[{"Sow", "[", " ", 
                 RowBox[{"Log", "[", 
                  RowBox[{
                   RowBox[{"Det", "[", "PP", "]"}], "^", "2"}], "]"}], "]"}], 
                ";", 
                RowBox[{"QQ0", "=", "QQsave"}], ";"}], ",", 
               RowBox[{"{", 
                RowBox[{"dimToVary", ",", "1", ",", "lmax"}], "}"}]}], "]"}], 
             "]"}]}], ";", "\n", "\n", " ", 
           RowBox[{"Actionnew", " ", "=", 
            RowBox[{"Actionnew", " ", "+", 
             RowBox[{"Total", "[", 
              RowBox[{
               RowBox[{"smearedaction", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "//", "Flatten"}], "]"}]}]}], 
           " ", ";", "\n", "         ", "\n", "\n", "          ", 
           RowBox[{"metcheck", " ", "=", " ", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "betad"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"Actionnew", " ", "-", " ", "Action"}], ")"}]}], 
             "]"}]}], ";", "\n", "          ", 
           RowBox[{"rr", " ", "=", " ", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1"}], "}"}], "]"}]}], ";", "\n", 
           "          ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"metcheck", ">", "rr"}], ",", " ", 
             RowBox[{"Action", " ", "=", " ", "Actionnew"}], ",", 
             RowBox[{
              RowBox[{"\[CapitalDelta]L", "=", "\[CapitalDelta]LOld"}], ";", 
              RowBox[{"QQ0", "=", "QQold"}]}]}], "]"}], ";", "\n", 
           "          ", "\n", 
           RowBox[{"$MinPrecision", "=", "10"}], ";", "\n", "   ", 
           RowBox[{"dw", "=", 
            RowBox[{"\[CapitalDelta]L", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\n", 
           "          ", 
           RowBox[{"Sow", "[", " ", 
            RowBox[{"{", 
             RowBox[{"it", ",", " ", "dw", ",", " ", 
              RowBox[{"N", "[", 
               RowBox[{"Action", ",", "10"}], "]"}]}], "}"}], "]"}]}], ",", 
          "\n", "     ", 
          RowBox[{"{", 
           RowBox[{"it", ",", " ", "1", ",", " ", "Ndit"}], "}"}]}], "]"}], 
        "]"}]}], ";", " ", "\n", 
      RowBox[{"$MinPrecision", "=", "3"}], ";", "\n", "      ", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<Res-fixed_Param_Nit=\>\"", "<>", 
         RowBox[{"ToString", "[", "Ndit", "]"}], "<>", "\"\<prec=\>\"", "<>", 
         
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<beta=\>\"", "<>", 
         
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"betad", ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<sigmaMC=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"sigmaMC", ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<dcross=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"dcross", ",", "3"}], "]"}], "]"}], "<>", "\"\<seed=\>\"", 
         "<>", 
         RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<id=\>\"", "<>", 
         "idTag", "<>", "\"\<.txt\>\""}], ",", " ", 
        RowBox[{"TotD", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";"}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"weightedLeastSquares", "[", 
     RowBox[{"qq0_", ",", "id_", ",", "w_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rhovec", ",", "nu", ",", "s", ",", "r"}], "}"}], ",", "\n", 
      RowBox[{
       RowBox[{"rhovec", "=", 
        RowBox[{
         RowBox[{"Inverse", "[", 
          RowBox[{
           RowBox[{"Transpose", "[", "qq0", "]"}], ".", "w", ".", "qq0"}], 
          "]"}], ".", 
         RowBox[{"Transpose", "[", "qq0", "]"}], " ", ".", " ", "w", ".", 
         "id"}]}], ";", "\n", 
       RowBox[{"nu", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "w", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{"Length", "[", "rhovec", "]"}]}]}], ";", "\n", 
       RowBox[{"r", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qq0", ".", "rhovec"}], "-", "id"}], ")"}]}], ";", "\n", 
       RowBox[{"s", "=", 
        RowBox[{"r", ".", "w", ".", "r"}]}], ";", "\n", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"rhovec", ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Diagonal", "[", 
               RowBox[{"Inverse", "[", 
                RowBox[{
                 RowBox[{"Transpose", "[", "qq0", "]"}], ".", "w", ".", 
                 "qq0"}], "]"}], "]"}], ")"}], "^", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}], ")"}]}], ",", "r", ","}], 
           "*)"}], " ", 
          RowBox[{"s", "/", "nu"}]}], "}"}], "]"}]}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"metroReturnAvg", "[", 
    RowBox[{
    "prec_", ",", "nit_", ",", "\[Beta]_", ",", "\[CapitalDelta]L_", ",", 
     "seed_", ",", "initialOps_", ",", "idtag_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "data", "}"}], ",", "\n", 
     RowBox[{
      RowBox[{"MetroGoFixedSelectiveDir", "[", 
       RowBox[{
       "1", ",", "\[CapitalDelta]L", ",", "nit", ",", "prec", ",", "\[Beta]", 
        ",", "seed", ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "3"}], ",", 
        RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
         "\"\<id\>\"", "<>", "idtag"}], ",", "initialOps"}], "]"}], ";", "\n", 
      RowBox[{"data", "=", " ", 
       RowBox[{"Get", "[", 
        RowBox[{"\"\<Res-fixed_Param_Nit=\>\"", "<>", 
         RowBox[{"ToString", "[", "nit", "]"}], "<>", "\"\<prec=\>\"", "<>", 
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<beta=\>\"", "<>", 
         
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"\[Beta]", ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<sigmaMC=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "10"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<dcross=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<seed=\>\"", "<>", 
         RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<id=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
         "\"\<id\>\"", "<>", "idtag", "<>", "\"\<.txt\>\""}], "]"}]}], ";", 
      "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<Plot-fixed_Param_Nit=\>\"", "<>", 
         RowBox[{"ToString", "[", "nit", "]"}], "<>", "\"\<prec=\>\"", "<>", 
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<beta=\>\"", "<>", 
         
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"\[Beta]", ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<sigmaMC=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "10"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<dcross=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<seed=\>\"", "<>", 
         RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<id=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
         "\"\<id\>\"", "<>", "idtag", "<>", "\"\<.pdf\>\""}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"Joined", "->", "True"}], ",", 
          RowBox[{"GridLines", "->", "Automatic"}], ",", 
          RowBox[{"PlotStyle", "->", "Thin"}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
            "\"\<id\>\"", "<>", "idtag", "<>", "\"\<Nit=\>\"", "<>", 
            RowBox[{"ToString", "[", "nit", "]"}], "<>", "\"\< prec=\>\"", "<>", 
            RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\< beta=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{"\[Beta]", ",", "3"}], "]"}], "]"}], "<>", 
            "\"\< sigmaMC=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"1", "/", "10"}], ",", "3"}], "]"}], "]"}], "<>", 
            "\"\< dcross=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"1", "/", "3"}], ",", "3"}], "]"}], "]"}], "<>", 
            "\"\<seed=\>\"", "<>", 
            RowBox[{"ToString", "[", "seed", "]"}]}]}]}], "]"}]}], "]"}], ";",
       "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<zoom-Plot-fixed_Param_Nit=\>\"", "<>", 
         RowBox[{"ToString", "[", "nit", "]"}], "<>", "\"\<prec=\>\"", "<>", 
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<beta=\>\"", "<>", 
         
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{"\[Beta]", ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<sigmaMC=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "10"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<dcross=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"1", "/", "3"}], ",", "3"}], "]"}], "]"}], "<>", 
         "\"\<seed=\>\"", "<>", 
         RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<id=\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
         "\"\<id\>\"", "<>", "idtag", "<>", "\"\<.pdf\>\""}], ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "i"}], "]"}], "]"}], "-", 
             RowBox[{"2", "i"}], "+", "1"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}]}], "}"}]}], 
           "]"}], ",", 
          RowBox[{"Joined", "->", "True"}], ",", 
          RowBox[{"GridLines", "->", "Automatic"}], ",", 
          RowBox[{"PlotStyle", "->", "Thin"}], ",", 
          RowBox[{"PlotRange", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "nit"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}], "]"}], "<>", 
            "\"\<id\>\"", "<>", "idtag", "<>", "\"\<Nit=\>\"", "<>", 
            RowBox[{"ToString", "[", "nit", "]"}], "<>", "\"\< prec=\>\"", "<>", 
            RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\< beta=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{"\[Beta]", ",", "3"}], "]"}], "]"}], "<>", 
            "\"\< sigmaMC=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"1", "/", "10"}], ",", "3"}], "]"}], "]"}], "<>", 
            "\"\< dcross=\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "[", 
              RowBox[{
               RowBox[{"1", "/", "3"}], ",", "3"}], "]"}], "]"}], "<>", 
            "\"\<seed=\>\"", "<>", 
            RowBox[{"ToString", "[", "seed", "]"}]}]}]}], "]"}]}], "]"}], ";",
       "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"nit", "-", "100"}], ";;", "nit"}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}]}]}], "]"}], 
          "]"}], "]"}], ",", 
        RowBox[{"StandardDeviation", "[", 
         RowBox[{
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"nit", "-", "100"}], ";;", "nit"}], ",", 
            RowBox[{"1", ";;", 
             RowBox[{"Length", "[", "\[CapitalDelta]L", "]"}]}]}], "]"}], 
          "]"}], "]"}]}], "}"}]}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"checkMetroWeighted", "[", 
   RowBox[{
   "\[CapitalDelta]\[Phi]_", ",", "\[CapitalDelta]LOriginal_", ",", "prec_", 
    ",", "seed_", ",", "Nz_", ",", "sigmaz_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"itd", ",", " ", "DDldata", ",", "  ", "sigmaD", ",", " ", 
      RowBox[{"Action", "=", "100000000"}], ",", " ", 
      RowBox[{"Actionnew", "=", "0"}], ",", " ", "Action0", ",", " ", 
      "DDldatafixed", ",", " ", "QQ0", ",", " ", "QQ1", ",", " ", "str", ",", 
      " ", "Lmax", ",", " ", "Nvmax", ",", " ", "rr", ",", " ", "metcheck", 
      ",", " ", "sigmaDini", ",", " ", "\n", "    ", "zsample", ",", " ", 
      "Idsample", ",", " ", "PP0", ",", " ", "PP1", ",", " ", "lr", ",", " ", 
      "nr", ",", " ", "Errvect", ",", " ", "Factor", ",", " ", "Factor0", ",",
       " ", "ppm", ",", " ", "DDldataEx", ",", " ", "PPEx", ",", " ", "QQEx", 
      ",", " ", "Idsampleold", ",", " ", "ip", ",", " ", "nvmax", ",", " ", 
      "QQFold", ",", "  ", "\n", "    ", "\[CapitalDelta]LOld", ",", 
      "dimToVary", ",", "PP", ",", "QQsave", ",", 
      RowBox[{"\[CapitalDelta]L", "=", "\[CapitalDelta]LOriginal"}], ",", 
      "dw", ",", "smearedaction", ",", "\[Rho]", ",", "rhovec", ",", "eqs", 
      ",", "rhosol", ",", "last", ",", "check", ",", "results", ",", 
      "indices", ",", "rhopos", ",", "meanrho", ",", "sigmarho", ",", 
      "finalcheck", ",", "errSample"}], "}"}], ",", " ", "\n", "    ", 
    RowBox[{"(*", "precision", "*)"}], "\n", 
    RowBox[{
     RowBox[{"SetOptions", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"RandomReal", ",", "RandomVariate", ",", "NSolve"}], "}"}], 
       ",", 
       RowBox[{"WorkingPrecision", "->", "prec"}]}], "]"}], ";", "\n", 
     RowBox[{"$MaxPrecision", "=", "prec"}], ";", "\n", 
     RowBox[{"$MinPrecision", "=", "prec"}], ";", "\n", "\n", "    ", 
     RowBox[{"SeedRandom", "[", "seed", "]"}], ";", "\n", "  ", 
     RowBox[{"zsample", " ", "=", " ", 
      RowBox[{"Sample", "[", 
       RowBox[{"Nz", ",", "sigmaz", ",", "seed"}], "]"}]}], ";", " ", "\n", 
     RowBox[{"Idsample", " ", "=", " ", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"zsample", "[", 
               RowBox[{"[", "zv", "]"}], "]"}], "*", 
              RowBox[{"Conjugate", "[", 
               RowBox[{"zsample", "[", 
                RowBox[{"[", "zv", "]"}], "]"}], "]"}]}], ")"}], "^", 
            "\[CapitalDelta]\[Phi]"}], " ", "-", "\n", "        ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"zsample", "[", 
                 RowBox[{"[", "zv", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", " ", "-", " ", 
                RowBox[{"Conjugate", "[", 
                 RowBox[{"zsample", "[", 
                  RowBox[{"[", "zv", "]"}], "]"}], "]"}]}], ")"}]}], ")"}], 
            "^", "\[CapitalDelta]\[Phi]"}]}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"zv", ",", " ", "1", ",", " ", "Nz"}], "}"}]}], "]"}], ",",
         "prec"}], "]"}]}], ";", "\n", "    ", 
     RowBox[{"\[CapitalDelta]L", " ", "=", " ", "\[CapitalDelta]LOriginal"}], 
     ";", "\n", "  ", 
     RowBox[{
      RowBox[{"\[CapitalDelta]L", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "=", " ", 
      RowBox[{"SetPrecision", "[", 
       RowBox[{
        RowBox[{"\[CapitalDelta]L", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "prec"}], "]"}]}], 
     ";", "\n", "  ", "\n", "\n", "    ", 
     RowBox[{"QQ0", " ", "=", " ", 
      RowBox[{"qQGenDims", "[", 
       RowBox[{
       "\[CapitalDelta]\[Phi]", ",", "\[CapitalDelta]L", ",", "zsample"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"errSample", "=", 
      RowBox[{"Table", "[", " ", 
       RowBox[{
        RowBox[{"\[Rho]intErrorEstimateFt", "[", 
         RowBox[{"\[CapitalDelta]\[Phi]", ",", 
          RowBox[{"\[CapitalDelta]LOriginal", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"zsample", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Nz"}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"results", "=", 
      RowBox[{"weightedLeastSquares", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"QQ0", "//", "Transpose"}], ")"}], ",", "Idsample", ",", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"errSample", "^", 
          RowBox[{"(", 
           RowBox[{"-", "2"}], ")"}]}], "]"}]}], "]"}]}], ";", "\n", 
     RowBox[{"finalcheck", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"results", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ".", "QQ0"}], "-", "Idsample"}], 
         "]"}], "<", "errSample"}], "//", "Thread"}]}], ";", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"results", ",", 
        RowBox[{"And", "@@", "finalcheck"}]}], "}"}], "]"}], ";"}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"mcIterator", "[", 
   RowBox[{
   "initialOps_", ",", "finalOps_", ",", "\[CapitalDelta]Linitial_", ",", 
    "\[Beta]_", ",", "nz_", ",", "prec_", ",", "seed_", ",", "nits_", ",", 
    "runid_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[CapitalDelta]L", "=", "\[CapitalDelta]Linitial"}], ",", 
      "results"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{"Reap", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[CapitalDelta]L", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"1", ";;", "it"}], ",", "1"}], "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"Sow", "[", 
             RowBox[{"metroReturnAvg", "[", 
              RowBox[{"prec", ",", 
               RowBox[{"nits", "[", 
                RowBox[{"[", 
                 RowBox[{"it", "-", "initialOps", "+", "1"}], "]"}], "]"}], 
               ",", 
               RowBox[{"\[Beta]", "[", 
                RowBox[{"[", 
                 RowBox[{"it", "-", "initialOps", "+", "1"}], "]"}], "]"}], 
               ",", 
               RowBox[{"\[CapitalDelta]L", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ";;", "it"}], "]"}], "]"}], ",", "seed", ",", 
               "initialOps", ",", "runid"}], "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ";", "\n", 
          RowBox[{"Sow", "[", 
           RowBox[{"checkMetroWeighted", "[", 
            RowBox[{"1", ",", 
             RowBox[{"\[CapitalDelta]L", "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "it"}], "]"}], "]"}], ",", "prec", ",", 
             "seed", ",", "nz", ",", "runid"}], "]"}], "]"}], ";"}], "\n", 
         ",", 
         RowBox[{"{", 
          RowBox[{"it", ",", "initialOps", ",", "finalOps"}], "}"}]}], "]"}], 
       "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<averages_n_checks\>\"", "<>", "\"\<from\>\"", "<>", 
        RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
        RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
        "\"\<prec=\>\"", "<>", 
        RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
        RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<nz=\>\"", "<>", 
        RowBox[{"ToString", "[", "nz", "]"}], "<>", "\"\<.txt\>\""}], ",", 
       " ", "results"}], "]"}], ";"}]}], "\n", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"mcPlotDimsAndOPEs", "[", 
   RowBox[{
   "initialOps_", ",", "finalOps_", ",", "nz_", ",", "prec_", ",", "seed_", 
    ",", "runid_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "data", ",", "dims", ",", "opes", ",", "mcDims", ",", "mcOpes", ",", 
      "refDims", ",", "refOpes", ",", 
      RowBox[{"nrecs", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"finalOps", "-", "initialOps"}], ")"}], " ", "+", "1"}]}]}], 
     "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"data", "=", " ", 
      RowBox[{"Get", "[", 
       RowBox[{"\"\<averages_n_checks\>\"", "<>", "\"\<from\>\"", "<>", 
        RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
        RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
        "\"\<prec=\>\"", "<>", 
        RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
        RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<nz=\>\"", "<>", 
        RowBox[{"ToString", "[", "nz", "]"}], "<>", "\"\<.txt\>\""}], "]"}]}],
      ";", "\n", 
     RowBox[{"dims", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"1", ",", 
           RowBox[{
            RowBox[{"2", "nrecs"}], " ", "-", "1"}], ",", "2"}], "]"}]}], 
        "]"}], "]"}]}], ";", "\n", 
     RowBox[{"opes", "=", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"2", ",", 
           RowBox[{"2", "nrecs"}], " ", ",", "2"}], "]"}]}], "]"}], "]"}]}], 
     ";", "\n", 
     RowBox[{"mcDims", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"dims", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", 
            RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "//", "Transpose"}], 
        ",", 
        RowBox[{"PlotLegends", "->", 
         RowBox[{"{", 
          RowBox[{
          "\"\<l=0\>\"", ",", "\"\<l=2\>\"", ",", "\"\<l=4\>\"", ",", 
           "\"\<l=6\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", "\n", 
     RowBox[{"refDims", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "4", ",", "6", ",", "8"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "nrecs"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", "Dashed"}]}], "]"}]}], ";", "\n", 
     RowBox[{"mcOpes", "=", 
      RowBox[{"ListPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"opes", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "1", ",", "1", ",", 
            RowBox[{"1", ";;", "4"}]}], "]"}], "]"}], "//", "Transpose"}], 
        ",", 
        RowBox[{"PlotLegends", "->", 
         RowBox[{"{", 
          RowBox[{
          "\"\<l=0\>\"", ",", "\"\<l=2\>\"", ",", "\"\<l=4\>\"", ",", 
           "\"\<l=6\>\""}], "}"}]}], ",", 
        RowBox[{"PlotRange", "->", "All"}]}], "]"}]}], ";", "\n", 
     RowBox[{"refOpes", "=", 
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", 
          RowBox[{"1", "/", "3"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "nrecs"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", "Dashed"}]}], "]"}]}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<dims-plot\>\"", "<>", "\"\<from\>\"", "<>", 
        RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
        RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
        "\"\<prec=\>\"", "<>", 
        RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
        RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<nz=\>\"", "<>", 
        RowBox[{"ToString", "[", "nz", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"mcDims", ",", "refDims"}], "]"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"\"\<Dims_from\>\"", "<>", 
         RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
         RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
         "\"\<prec=\>\"", "<>", 
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
         
         RowBox[{"ToString", "[", "seed", "]"}]}]}]}], "]"}], ";", "\n", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<opes-plot\>\"", "<>", "\"\<from\>\"", "<>", 
        RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
        RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
        "\"\<prec=\>\"", "<>", 
        RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
        RowBox[{"ToString", "[", "seed", "]"}], "<>", "\"\<nz=\>\"", "<>", 
        RowBox[{"ToString", "[", "nz", "]"}], "<>", "\"\<.pdf\>\""}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"mcOpes", ",", "refOpes"}], "]"}], ",", 
       RowBox[{"PlotLabel", "->", 
        RowBox[{"\"\<OPEs_from\>\"", "<>", 
         RowBox[{"ToString", "[", "initialOps", "]"}], "<>", "\"\<to\>\"", "<>", 
         RowBox[{"ToString", "[", "finalOps", "]"}], "<>", "runid", "<>", 
         "\"\<prec=\>\"", "<>", 
         RowBox[{"ToString", "[", "prec", "]"}], "<>", "\"\<seed=\>\"", "<>", 
         
         RowBox[{"ToString", "[", "seed", "]"}]}]}]}], "]"}], ";", "\n", 
     RowBox[{"Return", "[", 
      RowBox[{"opes", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}]}]}], "\n", 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"deltaFree", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "#"}], ",", 
       RowBox[{
        RowBox[{"2", "#"}], "-", "2"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "n", ",", "1"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opeFreeRen", "[", "n_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"renomFactor", "[", 
         RowBox[{"2", "#"}], "]"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], " ", "2", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "#"}], "-", "2"}], ")"}], "!"}], ")"}], "^", "2"}], 
       "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", "#"}], "-", "2"}], ")"}]}], ")"}], "!"}]}]}], "&"}], 
    "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "n", ",", "1"}], "]"}]}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.7518911644576073`*^9, 3.751891176159153*^9}, {
   3.751891642478786*^9, 3.7518916437093353`*^9}, {3.751891712818028*^9, 
   3.7518917279072447`*^9}, 3.7518920042972097`*^9, 3.751892035567348*^9, {
   3.751892086284671*^9, 3.751892097336976*^9}, {3.75189273569844*^9, 
   3.751892798594782*^9}, {3.751892876939884*^9, 3.7518928856902018`*^9}, {
   3.751893836698647*^9, 3.751893840428385*^9}, {3.751893929619545*^9, 
   3.751893944992687*^9}, {3.7518940920618*^9, 3.751894101638451*^9}, {
   3.7518941600115623`*^9, 3.751894164111608*^9}, {3.751913414914217*^9, 
   3.751913427796217*^9}, {3.751941439176084*^9, 
   3.7519414396641283`*^9}},ExpressionUUID->"1aee49b8-b231-4f35-bb19-\
02e0238f8435"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]vec", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "7"}], ",", 
       RowBox[{"1", "/", "9"}], ",", 
       RowBox[{"1", "/", "10"}], ",", 
       RowBox[{"1", "/", "11"}], ",", 
       RowBox[{"1", "/", "12"}], ",", 
       RowBox[{"1", "/", "13"}]}], "}"}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"initial", "=", "4"}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"final", "=", "9"}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nvec", "=", 
     RowBox[{"{", 
      RowBox[{
      "3000", ",", "2000", ",", "2000", ",", "2000", ",", "2000", ",", 
       "2000"}], "}"}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Table", "["}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalDelta]Linitial", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "+", 
          RowBox[{"2", 
           RowBox[{"i", "/", "10"}]}]}], ",", 
         RowBox[{"#", "-", "2"}]}], "}"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", "18", ",", "2"}], "]"}]}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mcIterator", "[", 
          RowBox[{
          "initial", ",", "final", ",", "\[CapitalDelta]Linitial", ",", 
           "\[Beta]vec", ",", "1000", ",", "88", ",", "seed", ",", "nvec", 
           ",", 
           RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ";", 
         RowBox[{"mcPlotDimsAndOPEs", "[", 
          RowBox[{
          "initial", ",", "final", ",", "1000", ",", "88", ",", "seed", ",", 
           RowBox[{"ToString", "[", "i", "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"seed", ",", "555", ",", "558"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "10"}], "}"}]}], "]"}], ";"}], 
   "*)"}]}]], "Code",ExpressionUUID->"b3ac020f-e469-4c46-8aa0-7ad4bd510350"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]vec", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "7"}], ",", 
       RowBox[{"1", "/", "9"}], ",", 
       RowBox[{"1", "/", "10"}], ",", 
       RowBox[{"1", "/", "11"}], ",", 
       RowBox[{"1", "/", "12"}], ",", 
       RowBox[{"1", "/", "13"}]}], "}"}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"nvec", "=", 
     RowBox[{"{", 
      RowBox[{
      "3000", ",", "2000", ",", "2000", ",", "2000", ",", "2000", ",", 
       "2000"}], "}"}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[CapitalDelta]Linitial", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "+", "1"}], ",", 
         RowBox[{"#", "-", "2"}]}], "}"}], "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{"2", ",", "18", ",", "2"}], "]"}]}]}], ";"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"initial", "=", "4"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"final", "=", "9"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mcIterator", "[", 
        RowBox[{
        "initial", ",", "final", ",", "\[CapitalDelta]Linitial", ",", 
         "\[Beta]vec", ",", "1000", ",", "88", ",", "seed", ",", "nvec", ",", 
         "\"\<anche_OPEs\>\""}], "]"}], ";", 
       RowBox[{"mcPlotDimsAndOPEs", "[", 
        RowBox[{
        "initial", ",", "final", ",", "1000", ",", "88", ",", "seed", ",", 
         "\"\<anche_OPEs\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"seed", ",", "566", ",", "585"}], "}"}]}], "]"}], ";"}], 
   "*)"}]}]], "Code",ExpressionUUID->"68ea1d51-7ff5-4969-aa27-33cae6361a6e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"nop", ",", "isigmaz", ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"inz", "/", "3"}], ")"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"checkMetroWeighted", "[", 
        RowBox[{"1", ",", 
         RowBox[{"deltaFree", "[", "nop", "]"}], ",", "90", ",", "123", ",", 
         RowBox[{"IntegerPart", "[", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"inz", "/", "3"}], ")"}]}], "]"}], ",", 
         RowBox[{"10", "^", 
          RowBox[{"(", 
           RowBox[{"-", "isigmaz"}], ")"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nop", ",", "4", ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"isigmaz", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"inz", ",", "5", ",", "9"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"Dimensions", "[", "a", "]"}], "]"}], ";"}], "\n", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<scanningOPEsolver.txt\>\"", ",", "a"}], "]"}], "\n"}], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.751784235252894*^9, 3.75178424501582*^9}, {
  3.751784553480258*^9, 3.751784581439777*^9}, {3.751892138484439*^9, 
  3.75189216710002*^9}},ExpressionUUID->"a2d1a1df-639a-4c29-b437-\
8d8b96378ac4"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"Inverse\\\"}]\\) of badly conditioned \
matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"4.\
528411715623851852974662895409308612381509997634370062988178501068420622079251\
01809059381`90.*^9\\\", \\\",\\\", \
\\\"5.124408456296549849630181100421725346164683139291849551449869791518762120\
1885045378797724`90.*^10\\\", \\\",\\\", \
\\\"1.484088978052041900254826133766143947859126572595075892679078813969072372\
71916896452241028`90.*^11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"99\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"1.041781067310163416774696815494635038692527920369951909860584051403641834\
71111566261177262`90.*^12\\\", \\\",\\\", \
\\\"1.391310013573983939990977484008569543864354515867461022689016611165477435\
98534166525344196`90.*^12\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"6\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"99\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"99\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\[RightSkeleton]\\\"}]}], \\\
\"}\\\"}]}], \\\"}\\\"}]\\) may contain significant numerical errors.\"",2,54,
   1,31823568546477292051,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751892455347508*^9, 3.751892932642247*^9, 
  3.751893867853331*^9, 3.751893970678527*^9, 3.751894190925127*^9, 
  3.751913858196052*^9},ExpressionUUID->"7f1e9c61-515a-4a3b-8b13-\
5beba873647f"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"Inverse\\\"}]\\) of badly conditioned \
matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"1.\
210496345576657699962345917283119192543216740292843632181136126635626498646713\
26737748544`90.*^10\\\", \\\",\\\", \
\\\"1.369813044951394119770704896619376841658175531011732686750031583091093193\
75639512122097678`90.*^11\\\", \\\",\\\", \
\\\"3.967139250055766327260172962493929484236799902062320610182594904101404240\
33584430233241437`90.*^11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"99\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"2.784796161009794185220708266060814503285323740381241509859597135219442260\
42644811913486878`90.*^12\\\", \\\",\\\", \
\\\"3.719123826827636331842081142669799748592583771326299921466307309289100459\
48608166160518434`90.*^12\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
may contain significant numerical errors.\"",2,54,2,31823568546477292051,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751892455347508*^9, 3.751892932642247*^9, 
  3.751893867853331*^9, 3.751893970678527*^9, 3.751894190925127*^9, 
  3.751913859263735*^9},ExpressionUUID->"f341d337-4233-4995-93eb-\
23d871b0b073"],

Cell[BoxData[
 TemplateBox[{
  "Inverse","luc",
   "\"Result for \\!\\(\\*RowBox[{\\\"Inverse\\\"}]\\) of badly conditioned \
matrix \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{\\\"2.\
347204761174045155349716599268544681319237434041507962595524664164109469086080\
59667540643`90.*^10\\\", \\\",\\\", \
\\\"2.656126658425310237400634450860307271385135510639821448027591696614916502\
63319466561102072`90.*^11\\\", \\\",\\\", \
\\\"7.692453757279235106140561709397936829439481734460402894465209155666403676\
38363969986151678`90.*^11\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"99\\\", \\\"\[RightSkeleton]\\\"}], \\\",\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"98\\\", \\\"\[RightSkeleton]\\\"}], \
\\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"99\\\", \
\\\"\[RightSkeleton]\\\"}], \\\",\\\", \
\\\"5.399835282129414258995495737819216354830985960325219675944505350544879428\
77990595803055388`90.*^12\\\", \\\",\\\", \
\\\"7.211533049849748459552079972735997928274502006156959123546625853845677295\
57542245640006251`90.*^12\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"7\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) \
may contain significant numerical errors.\"",2,54,3,31823568546477292051,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751892455347508*^9, 3.751892932642247*^9, 
  3.751893867853331*^9, 3.751893970678527*^9, 3.751894190925127*^9, 
  3.751913861827799*^9},ExpressionUUID->"757ea574-7427-47cf-b5e6-\
3dac6c0dc745"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Inverse\\\", \
\\\"::\\\", \\\"luc\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,54,4,31823568546477292051,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.751892455347508*^9, 3.751892932642247*^9, 
  3.751893867853331*^9, 3.751893970678527*^9, 3.751894190925127*^9, 
  3.751913861947027*^9},ExpressionUUID->"47004fa0-9be9-43fe-b913-\
42ff52f4c70a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "4", ",", "5", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.7518925871271763`*^9, 3.75189294790816*^9, 
  3.751893879987915*^9, 3.75189398234098*^9, 3.751894202638617*^9, 
  3.75191405114364*^9},ExpressionUUID->"3b6c8b03-05f6-406c-95fc-2b6821f988b8"],

Cell[BoxData["\<\"scanningOPEsolver.txt\"\>"], "Output",
 CellChangeTimes->{3.751892587785955*^9, 3.751892948527204*^9, 
  3.7518938800192747`*^9, 3.751893982384581*^9, 3.7518942026733294`*^9, 
  3.751914051370229*^9},ExpressionUUID->"b7495585-f8b8-403b-b884-\
ca2d4c462627"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"opeFree", "[", "10", "]"}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.751892927417005*^9, 3.751892953474991*^9}, {
  3.751894012959964*^9, 
  3.751894013311548*^9}},ExpressionUUID->"d1a4fc47-19f5-40e3-bf96-\
a507ba6d8dd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.`", ",", "0.3333333333333333`", ",", "0.02857142857142857`", ",", 
   "0.0021645021645021645`", ",", "0.0001554001554001554`", ",", 
   "0.00001082508822446903`", ",", "7.39602301050679`*^-7", ",", 
   "4.985467362637911`*^-8", ",", "3.3273419550419868`*^-9", ",", 
   "2.2038238923005368`*^-10"}], "}"}]], "Output",
 CellChangeTimes->{{3.751892948581986*^9, 3.75189295408079*^9}, 
   3.751894013746142*^9, 
   3.751894202724268*^9},ExpressionUUID->"79235d9b-8224-42e5-9db4-\
02d0d9d0c8af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"opeFreeRen", "[", "10", "]"}], "//", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"#", ",", "16"}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.7518940667907352`*^9, 3.751894067174714*^9}, {
  3.751894238165331*^9, 
  3.7518942530432777`*^9}},ExpressionUUID->"2023fa21-c303-4b66-8761-\
07cf5e599e73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.37258300203047921917298041264490887048`16.", ",", 
   "0.10774685617806045614483851351755440153`16.", ",", 
   "0.00434985779123783926385603548801327068`16.", ",", 
   "0.00015520952471434905753882534692967249`16.", ",", 
   "5.24842547270864475024379495517034`16.*^-6", ",", 
   "1.7219727388878764707491978338123`16.*^-7", ",", 
   "5.54128289124616071504541353827`16.*^-9", ",", 
   "1.7592808982320247170125786397`16.*^-10", ",", 
   "5.53024010329181558303406311`16.*^-12", ",", 
   "1.725204886030683713423065723356328433131046706`16.*^-13"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.751894067683641*^9, 3.7518942027819557`*^9, {3.7518942400636187`*^9, 
   3.7518942534547443`*^9}, 3.751914572864689*^9, 
   3.751941448827681*^9},ExpressionUUID->"cc5d5e87-df38-4ba0-9794-\
539f5040b63c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "2", ",", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"5", "/", "2"}], ")"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"checkMetroWeighted", "[", 
     RowBox[{"1", ",", 
      RowBox[{"deltaFree", "[", "5", "]"}], ",", "90", ",", "123", ",", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"5", "/", "2"}], ")"}]}], "]"}], ",", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{"-", "2"}], ")"}]}]}], "]"}]}], "}"}], "*)"}]], "Code",Express\
ionUUID->"6e2e7b87-9624-488d-91ba-cfde40400656"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"[", 
   RowBox[{"7", ",", "2", ",", "5", ",", "2", ",", "1"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7518931368499193`*^9, 3.751893185992302*^9}, {
  3.751893515117371*^9, 3.751893515652657*^9}, {3.7518936031307898`*^9, 
  3.7518936212502193`*^9}, {3.751893790426333*^9, 3.751893819968266*^9}, {
  3.7518938865147676`*^9, 
  3.751893902416875*^9}},ExpressionUUID->"be46871f-89e2-41b3-9f9f-\
977b1df2feda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.37257973003217547475383392065696053522637599446221007335658158247814964\
964010444528131572`90.", ",", 
     "0.1077473576821879540900754678648947201080144577066515733610920239706162\
2299481734988134745`90.", ",", 
     "0.0043497459648155002048018509532186816784608009218916598111112849293511\
3187701617971405606717`90.", ",", 
     "0.0001552368850592906253434731450730171609430343078796211501131833236413\
90006800474400284377848`90.", ",", 
     "5.2419743791807289469493742952024208863097029860340392764903166763347521\
9339048308359205002`90.*^-6", ",", 
     "1.7356337121518835989188595368948126218938223711359501685032586289992248\
0860598201646259586`90.*^-7", ",", 
     "5.2959634174368196857601794190767289733965971373479629501603990286864626\
1178615458733855817`90.*^-9", ",", 
     "2.1101456155313644397531659005015628986712864714253693531798214937815863\
8559347395745510983`90.*^-10", ",", 
     "1.8719937829898387466067168392980544134153081775691173116505549231304234\
153937246544320137`90.*^-12", ",", 
     "4.0784075820760758298352054933583804077837268517639673049685647844748030\
8351020254017673491`90.*^-13"}], "}"}], ",", 
   "2.495592135379987649885550146216218454476113110901428586353467304222970656\
3225364743263691`90.*^-43"}], "}"}]], "Output",
 CellChangeTimes->{{3.751893156264296*^9, 3.7518931863986387`*^9}, 
   3.751893516324108*^9, {3.751893607257395*^9, 3.751893621675336*^9}, {
   3.751893791019609*^9, 3.751893820480764*^9}, {3.751893882149211*^9, 
   3.75189390269869*^9}, 3.7518939974603243`*^9, 3.75189420283438*^9, 
   3.751914564725243*^9},ExpressionUUID->"561ce4d9-3dfa-4b4b-b46f-\
f48c692f2ba2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"renomFactor", "[", "2", "]"}], "//", "N"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.751940733568688*^9, 
  3.751940750560773*^9}},ExpressionUUID->"d6d1c7a8-476a-4544-a104-\
4e32ad3a5044"],

Cell[BoxData["1.4571067811865468`"], "Output",
 CellChangeTimes->{{3.751940746544983*^9, 
  3.751940752705017*^9}},ExpressionUUID->"67c993e6-0d12-4c83-924a-\
8436ec595f95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "/", 
   RowBox[{"renomFactor", "[", "2", "]"}]}], "//", "N"}]], "Input",
 CellChangeTimes->{{3.751940758346545*^9, 
  3.7519407698313932`*^9}},ExpressionUUID->"bd12c677-6c1e-42c2-a657-\
f882eb6028cf"],

Cell[BoxData["1.37258300203048`"], "Output",
 CellChangeTimes->{{3.751940762156837*^9, 
  3.751940770292775*^9}},ExpressionUUID->"3e940a99-0196-4605-ba95-\
e5819d23ae77"]
}, Open  ]]
},
WindowSize->{1280, 686},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (April 18, \
2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 153, 2, 32, "Input", "ExpressionUUID" -> \
"fc075a62-b024-4e60-9ef6-b110ebac46d6"],
Cell[714, 24, 76848, 1925, 3131, "Code", "ExpressionUUID" -> \
"1aee49b8-b231-4f35-bb19-02e0238f8435"],
Cell[77565, 1951, 2093, 62, 167, "Code", "ExpressionUUID" -> \
"b3ac020f-e469-4c46-8aa0-7ad4bd510350"],
Cell[79661, 2015, 1745, 51, 148, "Code", "ExpressionUUID" -> \
"68ea1d51-7ff5-4969-aa27-33cae6361a6e"],
Cell[CellGroupData[{
Cell[81431, 2070, 1469, 38, 94, "Code", "ExpressionUUID" -> \
"a2d1a1df-639a-4c29-b437-8d8b96378ac4",
 InitializationCell->False],
Cell[82903, 2110, 2173, 36, 132, "Message", "ExpressionUUID" -> \
"7f1e9c61-515a-4a3b-8b13-5beba873647f"],
Cell[85079, 2148, 1528, 27, 114, "Message", "ExpressionUUID" -> \
"f341d337-4233-4995-93eb-23d871b0b073"],
Cell[86610, 2177, 1528, 27, 114, "Message", "ExpressionUUID" -> \
"757ea574-7427-47cf-b5e6-3dac6c0dc745"],
Cell[88141, 2206, 511, 10, 24, "Message", "ExpressionUUID" -> \
"47004fa0-9be9-43fe-b913-42ff52f4c70a"],
Cell[88655, 2218, 304, 5, 24, "Print", "ExpressionUUID" -> \
"3b6c8b03-05f6-406c-95fc-2b6821f988b8"],
Cell[88962, 2225, 275, 4, 32, "Output", "ExpressionUUID" -> \
"b7495585-f8b8-403b-b884-ca2d4c462627"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89274, 2234, 260, 6, 32, "Input", "ExpressionUUID" -> \
"d1a4fc47-19f5-40e3-bf96-a507ba6d8dd4"],
Cell[89537, 2242, 535, 11, 35, "Output", "ExpressionUUID" -> \
"79235d9b-8224-42e5-9db4-02d0d9d0c8af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90109, 2258, 340, 9, 32, "Input", "ExpressionUUID" -> \
"2023fa21-c303-4b66-8761-07cf5e599e73"],
Cell[90452, 2269, 843, 18, 92, "Output", "ExpressionUUID" -> \
"cc5d5e87-df38-4ba0-9794-539f5040b63c"]
}, Open  ]],
Cell[91310, 2290, 711, 20, 52, "Code", "ExpressionUUID" -> \
"6e2e7b87-9624-488d-91ba-cfde40400656"],
Cell[CellGroupData[{
Cell[92046, 2314, 461, 10, 32, "Input", "ExpressionUUID" -> \
"be46871f-89e2-41b3-9f9f-977b1df2feda"],
Cell[92510, 2326, 1725, 32, 249, "Output", "ExpressionUUID" -> \
"561ce4d9-3dfa-4b4b-b46f-f48c692f2ba2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94272, 2363, 254, 7, 54, "Input", "ExpressionUUID" -> \
"d6d1c7a8-476a-4544-a104-4e32ad3a5044"],
Cell[94529, 2372, 172, 3, 32, "Output", "ExpressionUUID" -> \
"67c993e6-0d12-4c83-924a-8436ec595f95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94738, 2380, 240, 6, 32, "Input", "ExpressionUUID" -> \
"bd12c677-6c1e-42c2-a657-f882eb6028cf"],
Cell[94981, 2388, 170, 3, 66, "Output", "ExpressionUUID" -> \
"3e940a99-0196-4605-ba95-e5819d23ae77"]
}, Open  ]]
}
]
*)

