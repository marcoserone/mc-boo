(* ::Package:: *)

(* ::Input::Initialization:: *)
(*Define symmetric quantization rho*)
CleanSlate;
$MinPrecision=MachinePrecision;
  \[Rho]z[z_] := z/(1 + Sqrt[1 - z])^2; 
 \[Rho]zb[z_] := \[Rho]z[Conjugate[z]]; 
 (*error estimates*)
    \[Rho]intErrorEstimateG[d_, DDs_, z_, \[Gamma]_] := (2^(\[Gamma] + 4*d)*\[Beta]^(\[Gamma] - 4*d)*Gamma[1 - \[Gamma] + 4*d, \[Beta]*DDs])/(Gamma[1 - \[Gamma] + 4*d]*(1 - r^2)^\[Gamma])/.  {r -> Abs[\[Rho]z[z]], \[Beta] -> -Log[Abs[\[Rho]z[z]]]}; 
      \[Rho]intErrorEstimateFt[d_, DDs_, z_, \[Gamma]_] := 
     v^d*\[Rho]intErrorEstimateG[d, DDs, z, \[Gamma]] + u^d*\[Rho]intErrorEstimateG[d, DDs, 1 - z, \[Gamma]] /. {u -> z*Conjugate[z], v -> (1 - z)*(1 - Conjugate[z])}; 
     (*coefficients and prefactors*)
    kfunctAna[\[Beta]_, x_] := Exp[(\[Beta]/2)*Log[4*((1 - Sqrt[1 - x])^2/x)]]*(x/(2*(1 - x)^(1/4)*(1 - Sqrt[1 - x]))); 
    ConformalBlockAna[DD_, l_, z_] := ((-1)^l/2^l)*((z*Conjugate[z])/(z - Conjugate[z]))*(kfunctAna[DD + l, z]*kfunctAna[DD - l - 2, Conjugate[z]] - 
       kfunctAna[DD + l, Conjugate[z]]*kfunctAna[DD - l - 2, z]);
       (*derivatives*)
       FAnaDer[DD_, l_, z_] := (1/(z - Conjugate[z]))*(-1)^(2*l)*(1 - z)*z*
      (1 - Conjugate[z])*Conjugate[z]*(-((2^(-5 + 2*DD)*((1 - Sqrt[z])/(1 + Sqrt[z]))^((1/2)*(-2*l + DD))*(1 - z)*
          ((1 - Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))^((1/2)*(-2*l + DD))*(-((1 - Sqrt[z])/(1 + Sqrt[z]))^(2*l) - 
           Sqrt[z]*(((1 - Sqrt[z])/(1 + Sqrt[z]))^(2*l) + ((1 - Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))^(2*l)) + 
           ((1 - Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))^(2*l) + (((1 - Sqrt[z])/(1 + Sqrt[z]))^(2*l) + 
             Sqrt[z]*(((1 - Sqrt[z])/(1 + Sqrt[z]))^(2*l) - ((1 - Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))^(2*l)) + 
             ((1 - Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))^(2*l))*Sqrt[Conjugate[z]])*(1 - Conjugate[z])*
          (Log[16] + Log[-((-1 + Sqrt[z])/(1 + Sqrt[z]))] + Log[-((-1 + Sqrt[Conjugate[z]])/(1 + Sqrt[Conjugate[z]]))]))/
         ((-1 + Sqrt[z])^2*z^(1/4)*(-1 + Sqrt[Conjugate[z]])^2*Conjugate[z]^(1/4))) + (2^(-5 + 2*DD)*((-1 + Sqrt[1 - z])^2/z)^((1/2)*(-2*l + DD))*z*
         ((-1 + Sqrt[1 - Conjugate[z]])^2/Conjugate[z])^((1/2)*(-2*l + DD))*Conjugate[z]*(-2*z*(-((-2 + 2*Sqrt[1 - z] + z)/z))^(2*l)*
           (-1 + Sqrt[1 - Conjugate[z]]) + Conjugate[z]*(2*(-1 + Sqrt[1 - z])*(-((-2 + 2*Sqrt[1 - Conjugate[z]] + Conjugate[z])/Conjugate[z]))^(2*l) + 
            z*(-(-((-2 + 2*Sqrt[1 - z] + z)/z))^(2*l) + (-((-2 + 2*Sqrt[1 - Conjugate[z]] + Conjugate[z])/Conjugate[z]))^(2*l))))*
         (Log[16] + Log[(-1 + Sqrt[1 - z])^2/z] + Log[(-1 + Sqrt[1 - Conjugate[z]])^2/Conjugate[z]]))/((-1 + Sqrt[1 - z])^3*(1 - z)^(1/4)*
         (-1 + Sqrt[1 - Conjugate[z]])^3*(1 - Conjugate[z])^(1/4))); 
	 ConformalBlockAnaDer[DD_, l_, z_] := 
     -((I*(-1)^l*2^(-6 - l + 2*DD)*((-1 + Sqrt[1 - z])^2/z)^((1/2)*(-l + DD))*Abs[z]^4*((-1 + Sqrt[1 - Conjugate[z]])^2/Conjugate[z])^
         ((1/2)*(-l + DD))*(2*z*(-1 + Sqrt[1 - Conjugate[z]])*(-((-2 + 2*Sqrt[1 - Conjugate[z]] + Conjugate[z])/Conjugate[z]))^l + 
         Conjugate[z]*(-2*(-1 + Sqrt[1 - z])*(-((-2 + 2*Sqrt[1 - z] + z)/z))^l + z*(-(-((-2 + 2*Sqrt[1 - z] + z)/z))^l + 
             (-((-2 + 2*Sqrt[1 - Conjugate[z]] + Conjugate[z])/Conjugate[z]))^l)))*(Log[(16*(-1 + Sqrt[1 - z])^2)/z] + 
         Log[(-1 + Sqrt[1 - Conjugate[z]])^2/Conjugate[z]]))/((-1 + Sqrt[1 - z])^3*(1 - z)^(1/4)*(-1 + Sqrt[1 - Conjugate[z]])^3*
        (1 - Conjugate[z])^(1/4)*Im[z])); 
	kfunct[\[Beta]_, x_] := kfunct[\[Beta], x] = x^(\[Beta]/2)*Hypergeometric2F1[\[Beta]/2, \[Beta]/2, \[Beta], x]; 
    ConformalBlock[DD_, l_, z_] := ((-1)^l/2^l)*((z*Conjugate[z])/(z - Conjugate[z]))*(kfunct[DD + l, z]*kfunct[DD - l - 2, Conjugate[z]] - 
       kfunct[DD + l, Conjugate[z]]*kfunct[DD - l - 2, z]); 
      
      (*random sample of z around (1/2+I0)*)
           Sample[nz_,var_,seed_] := Module[{imax}, SeedRandom[seed];Table[Abs[RandomVariate[NormalDistribution[0, var]]]+
           1/2+I Abs[RandomVariate[NormalDistribution[0, var]]],{imax,1,nz}]]; 
qQGen[\[CapitalDelta]\[Phi]_,\[CapitalDelta]_,L_,zsample_]:=(((1 - zsample)*(1 - Conjugate[zsample]))^\[CapitalDelta]\[Phi]    ConformalBlock[\[CapitalDelta], L , zsample]- ((zsample)*( Conjugate[zsample]))^\[CapitalDelta]\[Phi] ConformalBlock[\[CapitalDelta], L,1- zsample])2^(L);qQGenDims[\[CapitalDelta]\[Phi]_,\[CapitalDelta]L_,z_]:=qQGen[1,#1[[1]],#1[[2]], z]&/@\[CapitalDelta]L


(* ::Input::Initialization:: *)
MetroGoFixedSelectiveDir[\[CapitalDelta]\[Phi]_,\[CapitalDelta]LOriginal_,Ndit_,prec_,betad_,seed_,sigmaMC_,dcross_,lmax_,idTag_]:=Block[{itd, DDldata, sigmaz, sigmaD, Action=100000000, Actionnew=0, Action0, DDldatafixed, QQ0, QQ1, str, Lmax, Nvmax, rr, metcheck, sigmaDini, 
    zsample, Idsample, Nz, PP0, PP1, lr, nr, Errvect, Factor, Factor0, ppm, DDldataEx, PPEx, QQEx, Idsampleold, ip, nvmax, QQFold,  
    IdsampleEx,zOPE,QQOPE,Calc,coeffTemp,Ident,OPEcoeff,ActionTot,  TotD ,DDldataold,QQold,\[CapitalDelta]LOld,dimToVary,PP,QQsave,\[CapitalDelta]L,dw,smearedaction}, 
    (*precision*)
SetOptions[{RandomReal,RandomVariate},WorkingPrecision->prec];
$MaxPrecision=prec;
$MinPrecision=prec;

    SeedRandom[seed];
    Nz=Length[\[CapitalDelta]LOriginal]+1;
  zsample = Sample[Nz,1/100,seed]; 
Idsample = SetPrecision[Table[(zsample[[zv]]*Conjugate[zsample[[zv]]])^\[CapitalDelta]\[Phi] -
        ((1 - zsample[[zv]])*(1 - Conjugate[zsample[[zv]]]))^\[CapitalDelta]\[Phi], {zv, 1, Nz}],prec];
    \[CapitalDelta]L = \[CapitalDelta]LOriginal;
  \[CapitalDelta]L[[All,1]] = SetPrecision[\[CapitalDelta]L[[All,1]],prec];
  

    QQ0 = qQGenDims[\[CapitalDelta]\[Phi],\[CapitalDelta]L,zsample];
     
    (*Monte Carlo Iteration*)
TotD =   Reap[ Do[
$MinPrecision=prec;
          \[CapitalDelta]LOld=\[CapitalDelta]L;
          QQold=QQ0;  

(*let every successive run start by varying only the new operator*)
        If[it<Ndit/10&& Nz!=5,dimToVary=Nz-1,  dimToVary = RandomInteger[{1,lmax}]];
       (*Shift one dimension by a random amount*)       
          \[CapitalDelta]L[[dimToVary,1]] = \[CapitalDelta]L[[dimToVary,1]]+ RandomVariate[NormalDistribution[0, sigmaMC]];
(*Reevaluate coefficients*)
           QQ0[[dimToVary]] = qQGen[\[CapitalDelta]\[Phi],\[CapitalDelta]L[[dimToVary]][[1]],\[CapitalDelta]L[[dimToVary]][[2]],zsample];
          
    (*Coefficients for LES and action thence*)
          PP = Join[QQ0, {Idsample}]; 
          Actionnew = Log[Det[PP]^2]; 
QQsave=QQ0;
(*Brot noch schmieren? *)
smearedaction=Reap[Table[
           QQ0[[dimToVary]] =qQGen[\[CapitalDelta]\[Phi],\[CapitalDelta]L[[dimToVary]][[1]]+dcross,\[CapitalDelta]L[[dimToVary]][[2]],zsample];  PP = Join[QQ0, {Idsample}]; 
          Sow[ Log[Det[PP]^2]];
           QQ0[[dimToVary]] =qQGen[\[CapitalDelta]\[Phi],\[CapitalDelta]L[[dimToVary]][[1]]-dcross,\[CapitalDelta]L[[dimToVary]][[2]],zsample];  PP = Join[QQ0, {Idsample}]; 
          Sow[ Log[Det[PP]^2]];QQ0=QQsave;,{dimToVary,1,lmax}]];

 Actionnew =Actionnew +Total[smearedaction[[2]]//Flatten] ;
         

          metcheck = Exp[(-betad)*(Actionnew - Action)];
          rr = RandomReal[{0, 1}];
          If[metcheck>rr, Action = Actionnew,\[CapitalDelta]L=\[CapitalDelta]LOld;QQ0=QQold];
          
$MinPrecision=10;
   dw=N[\[CapitalDelta]L[[All,1]],16];
          Sow[ {it, dw, N[Action,10]}],
     {it, 1, Ndit}]]; 
$MinPrecision=3;
      Export["Res-fixed_Param_Nit="<>ToString[Ndit]<>"prec="<>ToString[prec]<>"beta="<>ToString[N[betad,3]]<>"sigmaMC="<>ToString[N[sigmaMC,3]]<>"dcross="<>ToString[N[dcross,3]]<>"seed="<>ToString[seed]<>"id="<>idTag<>".txt", TotD[[2]]];]

weightedLeastSquares[qq0_,id_,w_]:=Block[{rhovec,nu,s,r},
rhovec=Inverse[Transpose[qq0].w.qq0].Transpose[qq0] . w.id;
nu = Dimensions[w][[1]]-Length[rhovec];
r=(qq0.rhovec-id);
s=r.w.r;
Return[{rhovec,(Diagonal[Inverse[Transpose[qq0].w.qq0]])^(-1),r, s/nu}]];



(* ::Input::Initialization:: *)
metroReturnAvg[prec_,nit_,\[Beta]_,\[CapitalDelta]L_,seed_]:=Block[{data},
MetroGoFixedSelectiveDir[1,\[CapitalDelta]L,nit,prec,\[Beta],seed,1/10,1/3,Length[\[CapitalDelta]L],ToString[Length[\[CapitalDelta]L]]];
data= Get["Res-fixed_Param_Nit="<>ToString[nit]<>"prec="<>ToString[prec]<>"beta="<>ToString[N[\[Beta],3]]<>"sigmaMC="<>ToString[N[1/10,3]]<>"dcross="<>ToString[N[1/3,3]]<>"seed="<>ToString[seed]<>"id="<>ToString[Length[\[CapitalDelta]L]]<>".txt"];
Export["Plot-fixed_Param_Nit="<>ToString[nit]<>"prec="<>ToString[prec]<>"beta="<>ToString[N[\[Beta],3]]<>"sigmaMC="<>ToString[N[1/10,3]]<>"dcross="<>ToString[N[1/3,3]]<>"seed="<>ToString[seed]<>"id="<>ToString[Length[\[CapitalDelta]L]]<>".pdf",ListPlot[Table[data[[All,2]][[All,i]],{i,1,Length[\[CapitalDelta]L]}],Joined->True,GridLines->Automatic,PlotStyle->Thin,PlotLabel->ToString[Length[\[CapitalDelta]L]]<>"Nit="<>ToString[nit]<>" prec="<>ToString[prec]<>" beta="<>ToString[N[\[Beta],3]]<>" sigmaMC="<>ToString[N[1/10,3]]<>" dcross="<>ToString[N[1/3,3]]<>"seed="<>ToString[seed]]];
Export["zoom-Plot-fixed_Param_Nit="<>ToString[nit]<>"prec="<>ToString[prec]<>"beta="<>ToString[N[\[Beta],3]]<>"sigmaMC="<>ToString[N[1/10,3]]<>"dcross="<>ToString[N[1/3,3]]<>"seed="<>ToString[seed]<>"id="<>ToString[Length[\[CapitalDelta]L]]<>".pdf",ListPlot[Table[data[[All,2]][[All,i]]-2i+1,{i,1,Length[\[CapitalDelta]L]}],Joined->True,GridLines->Automatic,PlotStyle->Thin,PlotRange->{{0,nit},{0,2}},PlotLabel->ToString[Length[\[CapitalDelta]L]]<>"Nit="<>ToString[nit]<>" prec="<>ToString[prec]<>" beta="<>ToString[N[\[Beta],3]]<>" sigmaMC="<>ToString[N[1/10,3]]<>" dcross="<>ToString[N[1/3,3]]<>"seed="<>ToString[seed]]];
{Mean[data[[All,2]][[nit-100;;nit,1;;Length[\[CapitalDelta]L]]]],\[CapitalDelta]L[[All,2]]}//Transpose]

checkMetro[\[CapitalDelta]\[Phi]_,\[CapitalDelta]LOriginal_,prec_,seed_]:=Block[{itd, DDldata, sigmaz, sigmaD, Action=100000000, Actionnew=0, Action0, DDldatafixed, QQ0, QQ1, str, Lmax, Nvmax, rr, metcheck, sigmaDini, 
    zsample, Idsample, Nz, PP0, PP1, lr, nr, Errvect, Factor, Factor0, ppm, DDldataEx, PPEx, QQEx, Idsampleold, ip, nvmax, QQFold,  
    \[CapitalDelta]LOld,dimToVary,PP,QQsave,\[CapitalDelta]L=\[CapitalDelta]LOriginal,dw,smearedaction,\[Rho],rhovec,eqs,rhosol,last,check,results,indices,rhopos,meanrho,sigmarho,finalcheck,errSample}, 
    (*precision*)
SetOptions[{RandomReal,RandomVariate,NSolve},WorkingPrecision->prec];
$MaxPrecision=prec;
$MinPrecision=prec;

    SeedRandom[seed];
    Nz=Length[\[CapitalDelta]LOriginal]+1;
  zsample = Sample[Nz,1/100,seed]; 
Idsample = SetPrecision[Table[(zsample[[zv]]*Conjugate[zsample[[zv]]])^\[CapitalDelta]\[Phi] -
        ((1 - zsample[[zv]])*(1 - Conjugate[zsample[[zv]]]))^\[CapitalDelta]\[Phi], {zv, 1, Nz}],prec];
    \[CapitalDelta]L = \[CapitalDelta]LOriginal;
  \[CapitalDelta]L[[All,1]] = SetPrecision[\[CapitalDelta]L[[All,1]],prec];
  

    QQ0 = qQGenDims[\[CapitalDelta]\[Phi],\[CapitalDelta]L,zsample];
rhovec=Subscript[\[Rho], #]&/@Range[1,Nz-1];
errSample=Table[ \[Rho]intErrorEstimateFt[\[CapitalDelta]\[Phi],\[CapitalDelta]LOriginal[[Nz-1]],zsample[[i]],1],{i,1,Nz}][[;;,1]];
results=Reap[Table[
indices=Drop[Range[1,Nz],{iDrop}];
eqs=(rhovec.QQ0[[All,indices]]==Idsample[[indices]]);
rhosol=NSolve[eqs,rhovec];
(*
rhopos=(rhovec/.rhosol[[1]])/.x_/;x<0->0;
*)
last=(Abs[QQ0[[All,iDrop]].rhopos-Idsample[[iDrop]]]);check=last<\[Rho]intErrorEstimateFt[1, \[CapitalDelta]L[[-1,1]],zsample[[iDrop]], 1];
Sow[rhovec/.rhosol[[1]]];,{iDrop,1,Nz}]];
meanrho=results[[2]][[1]]//Mean;
sigmarho=results[[2]][[1]]//StandardDeviation;
(*too restrictive to demand positive coefficients
If[And@@(meanrho+3sigmarho>0//Thread),
finalcheck=Abs[meanrho.QQ0-Idsample]<errSample//Thread,finalcheck=False];
*)
finalcheck=Abs[meanrho.QQ0-Idsample]<errSample//Thread;
Return[{meanrho,sigmarho,finalcheck,sigmarho/Abs[meanrho]}];
    
]
deltaFree[n_]:= {2#,2#-2}&/@Range[1,n,1];
opeFree[n_]:=2((2#-2)!)^2/(2(2#-2))!&/@Range[1,n,1];

checkMetroReloaded[\[CapitalDelta]\[Phi]_,\[CapitalDelta]LOriginal_,prec_,seed_,Nz_]:=Block[{itd, DDldata, sigmaz, sigmaD, Action=100000000, Actionnew=0, Action0, DDldatafixed, QQ0, QQ1, str, Lmax, Nvmax, rr, metcheck, sigmaDini, 
    zsample, Idsample, PP0, PP1, lr, nr, Errvect, Factor, Factor0, ppm, DDldataEx, PPEx, QQEx, Idsampleold, ip, nvmax, QQFold,  
    \[CapitalDelta]LOld,dimToVary,PP,QQsave,\[CapitalDelta]L=\[CapitalDelta]LOriginal,dw,smearedaction,\[Rho],rhovec,eqs,rhosol,last,check,results,indices,rhopos,meanrho,sigmarho,finalcheck,errSample}, 
    (*precision*)
SetOptions[{RandomReal,RandomVariate,NSolve},WorkingPrecision->prec];
$MaxPrecision=prec;
$MinPrecision=prec;

    SeedRandom[seed];
  zsample = Sample[Nz,1/100,seed]; 
Idsample = SetPrecision[Table[(zsample[[zv]]*Conjugate[zsample[[zv]]])^\[CapitalDelta]\[Phi] -
        ((1 - zsample[[zv]])*(1 - Conjugate[zsample[[zv]]]))^\[CapitalDelta]\[Phi], {zv, 1, Nz}],prec];
    \[CapitalDelta]L = \[CapitalDelta]LOriginal;
  \[CapitalDelta]L[[All,1]] = SetPrecision[\[CapitalDelta]L[[All,1]],prec];
  

    QQ0 = qQGenDims[\[CapitalDelta]\[Phi],\[CapitalDelta]L,zsample];
errSample=Table[ \[Rho]intErrorEstimateFt[\[CapitalDelta]\[Phi],\[CapitalDelta]LOriginal[[-1,1]],zsample[[i]],1],{i,1,Nz}];
results=LeastSquares[QQ0//Transpose,Idsample];
(*too restrictive to demand positive coefficients
If[And@@(meanrho+3sigmarho>0//Thread),
finalcheck=Abs[meanrho.QQ0-Idsample]<errSample//Thread,finalcheck=False];
*)
finalcheck=Abs[results.QQ0-Idsample]<errSample//Thread;
Return[{results,And@@finalcheck}];
    
]

checkMetroWeighted[\[CapitalDelta]\[Phi]_,\[CapitalDelta]LOriginal_,prec_,seed_,Nz_]:=Block[{itd, DDldata, sigmaz, sigmaD, Action=100000000, Actionnew=0, Action0, DDldatafixed, QQ0, QQ1, str, Lmax, Nvmax, rr, metcheck, sigmaDini, 
    zsample, Idsample, PP0, PP1, lr, nr, Errvect, Factor, Factor0, ppm, DDldataEx, PPEx, QQEx, Idsampleold, ip, nvmax, QQFold,  
    \[CapitalDelta]LOld,dimToVary,PP,QQsave,\[CapitalDelta]L=\[CapitalDelta]LOriginal,dw,smearedaction,\[Rho],rhovec,eqs,rhosol,last,check,results,indices,rhopos,meanrho,sigmarho,finalcheck,errSample}, 
    (*precision*)
SetOptions[{RandomReal,RandomVariate,NSolve},WorkingPrecision->prec];
$MaxPrecision=prec;
$MinPrecision=prec;

    SeedRandom[seed];
  zsample = Sample[Nz,1/100,seed]; 
Idsample = SetPrecision[Table[(zsample[[zv]]*Conjugate[zsample[[zv]]])^\[CapitalDelta]\[Phi] -
        ((1 - zsample[[zv]])*(1 - Conjugate[zsample[[zv]]]))^\[CapitalDelta]\[Phi], {zv, 1, Nz}],prec];
    \[CapitalDelta]L = \[CapitalDelta]LOriginal;
  \[CapitalDelta]L[[All,1]] = SetPrecision[\[CapitalDelta]L[[All,1]],prec];
  

    QQ0 = qQGenDims[\[CapitalDelta]\[Phi],\[CapitalDelta]L,zsample];
errSample=Table[ \[Rho]intErrorEstimateFt[\[CapitalDelta]\[Phi],\[CapitalDelta]LOriginal[[-1,1]],zsample[[i]],1],{i,1,Nz}];
results=weightedLeastSquares[(QQ0//Transpose)/errSample,Idsample/errSample,IdentityMatrix[Nz]];
finalcheck=Abs[results[[1]].QQ0-Idsample]<errSample//Thread;
Return[{results,And@@finalcheck}];
    
]


(* ::Code:: *)
(*opeFree[7]//N*)
(*deltaFree[7]*)
(*checkMetroReloaded[1,deltaFree[7],88,123,100]*)
(*checkMetroReloaded[1,{{1.985562815166302, 0}, {3.995697898897395, 2}, {5.992370108893179, *)
(*  4}, {7.979809443325255, 6}, {9.946270272835630, *)
(*  8}, {11.99120210750944, 10}, {13.99003141538504, *)
(*  12}, {15.99822720404369, 14}},88,123,100]*)
(*checkMetroReloaded[1,{{1.985562815166302, 0}, {3.995697898897395, 2}, {5.992370108893179, *)
(*  4}, {7.979809443325255, 6}, {9.996270272835630, *)
(*  8}, {11.99120210750944, 10}, {13.99003141538504, *)
(*  12}, {15.99822720404369, 14}},88,123,1000]*)


(* ::Code:: *)
(*opeFree[7]//N*)
(*freeResults=checkMetroWeighted[1,deltaFree[7],88,123,100];*)
(*approxResults100=Table[checkMetroWeighted[1,{{2+i/10000000,0},{4,2},{6,4},{8,6},{10,8},{12,10},{14,12}},88,123,100],{i,-10,10}];*)
(*approxResults1000=Table[checkMetroWeighted[1,{{2+i/10000000,0},{4,2},{6,4},{8,6},{10,8},{12,10},{14,12}},88,123,1000],{i,-10,10}];*)


a=ListPlot[approxResults100[[;;,1,1,1]],Joined->True];
b=ListPlot[approxResults1000[[;;,1,1,1]],Joined->True,PlotStyle->Red];
Show[a,b]


Histogram[{approxResults100[[5,1,3]]}]
Histogram[{approxResults1000[[5,1,3]]}]


approxResults1000[[1,1]]
freeResults


plot100=ListPlot[{approxResults100[[1,1]]}];
plot1000=ListPlot[{approxResults1000[[1,1]]}];
Show[plot100,plot100]


(* ::Code:: *)
(*nop=20;*)
(*prec=88;*)
(*refset=opeFree[nop]//N[#,prec]&;*)
(*{check5,test}=checkMetroReloaded[1,deltaFree[nop],prec,123,1000];*)
(*ListPlot[{refset//Abs//Log,check5//Abs//Log},Joined->True]*)
(*ListPlot[(refset-check5)/refset//Abs//Log,Joined->True]*)


(* ::Input:: *)
(*prec=88;*)
(*multiseedrun=ParallelTable[*)
(*deltares0={{3,0},{5,2},{7,4}}*)
(*check0=checkMetro[1,deltares0,prec,seed]*)
(*deltares1=metroReturnAvg[prec,2000,1/8,Join[deltares0,{{9,6}}],seed]*)
(*check1=checkMetro[1,deltares1,prec,seed]*)
(*deltares2=metroReturnAvg[prec,3000,1/9,Join[deltares1,{{11,8}}],seed]*)
(*check2=checkMetro[1,deltares2,prec,seed]*)
(*deltares3=metroReturnAvg[prec,4000,1/10,Join[deltares2,{{13,10}}],seed]*)
(*check3=checkMetro[1,deltares3,prec,seed]*)
(*deltares4=metroReturnAvg[prec,5000,1/11,Join[deltares3,{{15,12}}],seed]*)
(*check4=checkMetro[1,deltares4,prec,seed]*)
(*deltares5=metroReturnAvg[prec,4000,1/12,Join[deltares4,{{17,14}}],seed]*)
(*check5=checkMetro[1,deltares5,prec,seed]*)
(*prec=88;*)
(*seed=978;*)
(*deltares0={{3,0},{5,2},{7,4}}*)
(*check0=checkMetro[1,deltares0,prec,seed]*)
(*deltares1=metroReturnAvg[prec,2000,1/8,Join[deltares0,{{9,6}}],seed]*)
(*check1=checkMetro[1,deltares1,prec,seed]*)
(*deltares2=metroReturnAvg[prec,3000,1/9,Join[deltares1,{{11,8}}],seed]*)
(*check2=checkMetro[1,deltares2,prec,seed]*)
(*deltares3=metroReturnAvg[prec,4000,1/10,Join[deltares2,{{13,10}}],seed]*)
(*check3=checkMetro[1,deltares3,prec,seed]*)
(*deltares4=metroReturnAvg[prec,5000,1/11,Join[deltares3,{{15,12}}],seed]*)
(*check4=checkMetro[1,deltares4,prec,seed]*)
(*deltares5=metroReturnAvg[prec,4000,1/12,Join[deltares4,{{17,14}}],seed]*)
(*check5=checkMetro[1,deltares5,prec,seed]*)
(*seed=578;*)
(*deltares0={{3,0},{5,2},{7,4}}*)
(*check0=checkMetro[1,deltares0,prec,seed]*)
(*deltares1=metroReturnAvg[prec,2000,1/8,Join[deltares0,{{9,6}}],seed]*)
(*check1=checkMetro[1,deltares1,prec,seed]*)
(*deltares2=metroReturnAvg[prec,3000,1/9,Join[deltares1,{{11,8}}],seed]*)
(*check2=checkMetro[1,deltares2,prec,seed]*)
(*deltares3=metroReturnAvg[prec,4000,1/10,Join[deltares2,{{13,10}}],seed]*)
(*check3=checkMetro[1,deltares3,prec,seed]*)
(*deltares4=metroReturnAvg[prec,5000,1/11,Join[deltares3,{{15,12}}],seed]*)
(*check4=checkMetro[1,deltares4,prec,seed]*)
(*deltares5=metroReturnAvg[prec,4000,1/12,Join[deltares4,{{17,14}}],seed]*)
(*check5=checkMetro[1,deltares5,prec,seed]*)


 {{3,0},{5,2},{7,4}}
{{5.362572965350467498599624119776919880478298205972786270153724539021528058837798181798439`88.,-1.534126304435656798239285725563139559818925734359870452040866105516764331855039539067371`88.,0.4791303411935838156731499736234159205620567285624272037805212037058755810346324478987048`88.},{0.05798987653261288800288125375719106534707732778719521748845102601616136487737038062688081`88.,0.02780349011744094640896644516250609272942633171866634152175431509221668539834799222475506`88.,0.007454233480654912536467658026883726964939849303295378925494412429790275121050668703522544`88.},{True,True,True,True},{0.01081381585058264974328616633538260767074735995889276398541972414776989234671002388021594`88.,0.01812333836989303772561587508834274932931050529183025149638858562577257865976551146131239`88.,0.01555784061198321478698685165267083311216583272068267784803423046479605036777247721066832`88.}}
{{1.84876118795696502632725909530973922245`16.,0},{3.98599315847236493927733861846046342266`16.,2},{5.98685318245496119314522130520086545677`16.,4},{7.88968728860534753135828018501491590368`16.,6}}
{{2.413345471825914197172863731468036247336676343363129104244343185446730306002850926371265`88.,0.3251202997566746960437743740987039315028447468400685531668072149687516057745891074963762`88.,0.03116271024370123441792176672149982417368740353809384513666674062668059552254216609629883`88.,0.002132818148728084452293283122992802970991033070696318206868130545252084312362118618791504`88.},{0.005803876934753899124027667717152651277162970849544186986231743650029338211004648568441687`88.,0.001073745497127069617961859782543327532492195989893528947566526908855937226336890433270649`88.,0.00005813961835262911110502799032698130386126624985610426447600286040199996133002915475509862`88.,0.00007892361781688049923789231361133892207079939911761053893857728783334062267178825971971353`88.},{True,True,True,True,True},{0.002404909285682476747262870324669179224999626786674318542900067034478563464719457393766415`88.,0.003302609827595133733914073065180546991693601736460306916682141580255884094096634379094493`88.,0.00186567913695441771275583769593507225027742134689696013713812485874273237254120655202926`88.,0.03700438214291591067843634850000120875653558046726170178359133856947593021186755881136824`88.}}
{{1.64339346288747495655937202818170746424`16.,0},{3.90671287544244119001987543504803818398`16.,2},{5.90511196289121408059735909449994079121`16.,4},{8.08728445793378851942922022354199725915`16.,6},{10.4037157531710982629331817117338501943`16.,8}}
{{2.655005605796424196880738640317564633003300256812226371191120508494417213624567820120271`88.,0.4452766993638486003812257309620177866640062420573689689530661879127731825352796107505366`88.,0.002041095141217917909939864237105573858345166568131834352827433334692092554429095094056922`88.,0.006886972603660611133296674230560127943524615780520980529924876592072166406649017429729537`88.,0.0001557418601568701173035530625202866872918263328390254338264993240042583767763252273204552`88.},{0.001996995690648360475153592862423950691245029793254177255757868402612636317278303525583496`88.,0.0005267230246028189211812718313308351717771363825173732538878094449295755611029622358571757`88.,0.0003708910418351587433978986170887893777786129059232512577780021833447371391735054529443428`88.,0.0002072685423146637371056141341729961478727156760659649798755927367977633746313265147789173`88.,0.0000578345993282066205745920688120799251352583286544414689969313769913278223162648008843413`88.},{True,True,True,True,True,True},{0.0007521625138148512681444235439259324004418064042628144861133452835185333123873609687253429`88.,0.001182911716142636398964635231470981905103952168317361510858423325593138944238030342803027`88.,0.1817117851810909244429942465592186420631934013363814721803889048067662381142947711482187`88.,0.03009574079102549838824323731791888514148516220667086881840651671074278904953305988019279`88.,0.3713490982447046925751149563838885946744096451877755553693374099797276639016059429504006`88.}}
{{2.08168543911671817841370017211197320857`16.,0},{3.9766226697871286317328710123750666458`16.,2},{6.0128722326631483584797596269364307815`16.,4},{8.00677256657249733153971684497639577084`16.,6},{9.97982815389622078903047529084698199406`16.,8},{11.92419467755990684589510720020980879357`16.,10}}
{{1.662484723319979257563885729444801305521129691959594970315000261990547077879480199653125`88.,0.1262546525716658000455909142218424687899174345003733770737305363655357644554865502876842`88.,0.4545347105495679783199068514836722049231972463173185513617968004697639235191054975902315`88.,-0.3874445339309109059820125984376483201557375228217231829312159551309721672172605566283256`88.,0.1919549024158850931535955338273373462947303160361216630262956147641582882059405467018105`88.,-0.0407385768672307752537457653457685970209716050966004422119593014268677404382407006955791`88.},{0.3475548927728574151431559082012795398970024385890481627280524540732452855721220144107667`88.,0.02759828448625277407708383078247743163580894381987136747236753801739328348062819425097101`88.,0.1934888118925198225960842170790460471489506385826222897662275653452090531990526789083058`88.,0.1959219700735998417266236756158615951044065717837182984897962095853029730112544179009383`88.,0.09969633656394284062435862920754822191203145059223512937157605120134251881489728830248457`88.,0.02155633445654243866621812020362215189389725689084065131831138975843674525565920977766404`88.},{True,True,True,True,True,True,True},{0.2090574956254580589639238145304004892187994663048611572768466560553959370403319276169041`88.,0.2185922175864939941124771656051510111774631422806473820019120742299260774116446110886343`88.,0.425685448001488668572092672767270572656478091545815111192290113914928386663089285066162`88.,0.5056774658447927405969087031194552863865131945470003179061999135362192820927460043813679`88.,0.5193737451307341046655400928036200450987738509731122240062147137841362822252981006909162`88.,0.5291381318202572026920564278264565207822585666956826005552463754194388497746075225307976`88.}}
{{2.0137605430450508097316922193318928405`16.,0},{4.00046326151328966445184048986061229522`16.,2},{5.99479692714891154508894796354433790993`16.,4},{7.96996179987887687510550363753768489145`16.,6},{10.04029459263181909910707850494704462069`16.,8},{11.85638308748402346975252555955532796728`16.,10},{13.74601781458984067336686235114434730725`16.,12}}
{{-7.016902267675655840111691199731698026902600740657019722048302093616234763251692970893379`88.,2.803542417861743054751403051280856652592603993121458098486699765706203709199532480682248`88.,-0.5552557998172649640368715746065872968643451445387677119583778780520796731684232327288535`88.,0.008287336457759592841075265675576179499907666541306557941951055339575622233187335159654624`88.,0.003505910075964871549793907293930619184271596734861784528959356045323812463709755213559729`88.,0.04946422585236898163708587069747578984041981945978314397735715605581464987424831400238366`88.,-0.02246976673667291772177794088155863869588229482394175597618410808301967123124411420549807`88.},{1.791308510464217979465718666089059493399050652145182276967686951446689184422158535533025`88.,0.4968633763479080537943283516625127332118380765295762689586081640600091361729904684716539`88.,0.1231416705085178497391973811397870048697653957991537321407872305142359655956370948385357`88.,0.005426054097012622523967943377697206192409045353509158202584398729121485048112246667478971`88.,0.0006225793138652530902319737793373543204067544520347666495236847787051740775372852360882107`88.,0.008517438990842657198530107924089988209449982164788907005860062998059531131419073845897544`88.,0.003961322453367248488784928943050375224534717477446074215677805445201197757025217150114324`88.},{True,True,True,True,True,True,True,True},{0.2552848026280958477083895363632451350289930851331556570219391711871114413874124848848472`88.,0.1772269872509597661693942258419871170932572013411707946548030289775807914024354628340727`88.,0.2217746677279982516565950299973597064556776448426224795475382018447336305088986335924339`88.,0.6547404132400227941304351665553927640171515571126698104195609160634911559278157735688623`88.,0.1775799436880625795153511040586802073350911504334005067572413260040115320319503507256678`88.,0.1721939208401607474473786612223977218100003379679086030558983682923161628437219558391783`88.,0.1762956642937450746844750568639406283602586137099436128380844565721495930383681511170528`88.}}
{{1.98556281516630244635358735084528148614`16.,0},{3.99569789889739454603232393151343903722`16.,2},{5.99237010889317873433270016007232294027`16.,4},{7.97980944332525513239116996751847590219`16.,6},{9.94627027283562992789060298661316718016`16.,8},{11.90120210750943610872582220289535679996`16.,10},{13.83003141538503685838843609423918224606`16.,12},{15.72822720404369061868043941142202888855`16.,14}}
{{4.777296939818507758816115737600110757891348914017648622259615987295329178048852028634156`88.,-0.4653793869550388418836595481644919967938408577560533739134778453351638635199168544994274`88.,0.2875192918136764588212188433396246066368012902976995796335061937428287139547532919344718`88.,-0.03111945427526738564448949563982844872665473491832095279205459680846194266764798261831217`88.,-0.03776229983016545437862807225433407087722708203944054840953650987498957906236959818945696`88.,0.03249634281995668375256321286845786538667886504651408180289501540744796968546350139621733`88.,-0.01185858685679730600040081535499836525326656340763984802022823339892736564188608214746031`88.,0.001796819455912753721266135210705346287929271935014133516444108276161379033281974296608278`88.},{0.02065417763382913113047528444237582356622285400784338213428109064711020613540028035779252`88.,0.001231237855331138927199548541643224580847102116985594806403513702390433926281185677931853`88.,0.004754912039973389034321953253772202876481775138439036332103832237813335241517068246432522`88.,0.002573780566492447455137107901582408967849788666800896647857292204648838404021723401987853`88.,0.002952139821940253380014544871873354063628013445569585888948094319511406988798301548177341`88.,0.005068671774618565696336219879312271133910312248524502017226567836866587097847870533541754`88.,0.002948154985473119927606671369749950275634813036410527823296826524063696592591155466885814`88.,0.0006486886657896190419918571086337583705200693782627202524621472855165382182622286691489874`88.},{True,True,True,True,True,True,True,True,True},{0.004323402521136522684641078118752166187783723481830922611566518921534324648372124177380701`88.,0.00264566478413899126968005451962992102506091426642224990701410624640762784219852228234559`88.,0.01653771477377857000975441377923802388064390244014758096034649208517192094130288182150725`88.,0.08270648140954049327723821169122588138356348652645010349588710075380539273540226247659832`88.,0.07817690752992781023517752210741881535129566129974220228331455312719436860643861748069157`88.,0.1559766833671445746074671830873449952048077567276305906525214443644525385450342268370983`88.,0.2486093006759272026048146634617522615162395873717058877967770050197149471986616904634352`88.,0.3610205041218769714407604727952856298905011675831414252012416612612855332006225139248076`88.}}
{{3,0},{5,2},{7,4}}
{{5.299413638303969635988628036244573249315315463936865431362905653312240879265183496181992`88.,-1.503336422489193762441899618198183260846309396160170279660278763510857631801939390412094`88.,0.4706935688719497166923201987085833780411062588595417204798646335058170880882423223926997`88.},{0.00009796435310243197695839527571754623825022481180619995427394907376894720295278799468740964`88.,0.00004056052009721177952960341620677398519936878659543378058966463646797216704598802087519412`88.,7.179586469375296909071650015674010767939037909881099581929744637348235053725186174721615`88.*^-6},{True,True,True,True},{0.00001848588538066724677669072189081483950485315190069691277685332104066050629982696778335192`88.,0.00002698033486746266565465210535811500857337741872690672279782957773574356168211288947459775`88.,0.00001525320706331654681026677989647546435503295633241973049799544767774020248936127595382841`88.}}
{{1.82934245160679300844467585152973688573`16.,0},{3.92885998064077399677311695975005729771`16.,2},{5.88965345745107985957025344260495477138`16.,4},{8.02847875046531884680125762892274751848`16.,6}}
{{-4.514693378653021696720116988308736147571969560932605838231119721145398854482677887314947`88.,1.998422295352739285914068828319268986226504184495503273849432236765566939390785130586111`88.,-0.4976087671283943261460681943214638461201104736579888788977909693026778240202311700506161`88.,0.106429389159573458309860729817177938597795080950125091481283353309730721303410943218442`88.},{0.01119852936893809184147966660013958466780407309921553160582119755349563316787717356759832`88.,0.002563842346652067803318350923449526674182410545194854593636027180112574210889212086892571`88.,0.0007118298878029796891765304182327717542399058277211157730519273141581903085831340081133377`88.,0.0001113581684119055039866163284803690649680629241192394615443327326603148149524446833236512`88.},{True,True,True,True,True},{0.002480462886336529355060202609096020994196129103047314500959098658966447349736702243240029`88.,0.001282933218176254812080857281222474248439768437987289787223734650717774998192399744124923`88.,0.001430501098103264456018619920391574123212155762319857512209628507847983280829685122038907`88.,0.001046310321718958167509720361454082157108550590309556883008348978615224955814055854506239`88.}}
{{2.00113567497359968068501326198727253763`16.,0},{4.00926313070879759937181526483379412168`16.,2},{6.00744187150323235210143649070442818727`16.,4},{8.0599228763396342846039070129672014475`16.,6},{10.12307302944968724303822962657962207064`16.,8}}
{{2.663890091814805240480152294862126810509583565558648847298975006689724289701698161827136`88.,0.1228428080917567643441496033601659113690312857886911694591055497683936418574609049182726`88.,0.1158437094497385110824449486897874572665965004660174677573841945280524587002472347887186`88.,-0.029030496646304094678137965315252760943290166856524490207676049111961207762418765035839`88.,0.006302854507740388156315678201327710865470398279081974873083805748418172671733903246614804`88.},{0.06706856640411464536863784941949586469128378849477270927732947885895482848891872180498032`88.,0.01500015405733045227930113587860031621269611909195440006969150756614772483752199596040097`88.,0.0003712911060649639882036549907962272373832043803428102766590387368107502449028896573356954`88.,0.003246621869347948776764129241054811485695483872775710762214686533825716697459256680085459`88.,0.001227769870060313708458579627485453945690554183798290768196530855058761820092425286642398`88.},{True,True,True,True,True,True},{0.02517692700993659475335884669023503202063631616878537793678615199381338525563526688716997`88.,0.122108524628695960454877364001057644482020873647178556393359082340480308240759816823007`88.,0.003205103736997107073477730509479911425731657260951333942721100266818313366693191196361853`88.,0.1118348717524017927693148563442055745377281914410714522141795882990195208920531598036068`88.,0.1947958450496546059466752852590163652747929137002433176833830605211024606535317000600173`88.}}
{{2.04186116662500977892514363569617591405`16.,0},{4.00316559536745326301895912519941833685`16.,2},{5.98538580121553045460375057312003255485`16.,4},{7.9068426925964899356057188953984138221`16.,6},{9.71967622905108416577460685311349195202`16.,8},{11.41513209100132804272619674408004080399`16.,10}}
{{2.283488981120273242336690556232677760146307787304307398607678251936019899477636463110967`88.,0.2356354077475627040719361171100795825159489114677639132056640605237173344960544831100569`88.,0.04427312001645382646750661875046907180217986424242712332837705222394547783840676313290905`88.,0.01086465176443871766530024236710445658393920826860402021751673405305329708673492835304046`88.,-0.006555028660837809677754936843219335562731694956336333165736478466110279596150065422375323`88.,0.001373306362959906101136027314094172741995187047695199167629872736586041711745001121316823`88.},{0.1623094426140198511110369369598276375575736292456062376480082005369195154109554196108849`88.,0.05542465947767627556868017018546907027916689401602914623274657959682051614784627861594869`88.,0.02621427517764079629785125373058545162407089231433936120478433230028502831541352073255594`88.,0.01233948963312859993979509129691674950690247934599714259461715292094367438847561143491963`88.,0.004301025584008935018815185487981725425506290769447228593647598960909592853077414093778721`88.,0.0007578183639136455120652118265198513565744893663999917218768782448904443935758411345946667`88.},{True,True,True,True,True,True,True},{0.0710795821464359758617762033106251409626054990899083726197816109243032985738837292485579`88.,0.2352136294264101774827865903064903562137158986716815334228783675915817164415511773498591`88.,0.5921036323597348883526582124126536901283177063567355484472927806157876199721026963693762`88.,1.135746446427045179839007607723499979975899482891713340841221525690405000234627514660379`88.,0.6561413849652357456688501138914675750840379703431101204111093132011900854940630842433392`88.,0.5518203252770992515804402154478887875977002666426218411519857504747499517738504645696666`88.}}
{{2.06930542380880466909638263989707429919`16.,0},{3.99772823179178116545797718016096256557`16.,2},{5.9956702418420585228573132191030965247`16.,4},{8.00211814296263394106703813298646999258`16.,6},{10.0192546151672666757090716785114900919`16.,8},{12.05659424576329498128822137961057633554`16.,10},{14.13042586203938232786463144678975791041`16.,12}}
{{1.187205623456313853335430977311792020770468124039043394800837620380747234485219019590083`88.,0.5628210945821979099181746762743536456403893795171830025053967876236159369840124609170835`88.,-0.06633793906493685462656083125692706197321451222496248247640201714675282749916061950855505`88.,0.0384806966418942225515425170113992315148143624327283715078270662031527147769161891615001`88.,-0.00963448954536159109711946125620458049313964629965486442777962964183263136998656780739041`88.,0.001127322377210955810017719132764904958244850194419169826960133055810069759530154590426519`88.,0.0001129068415055966528511953231839746266537434372877189691933152972132389004905634898136828`88.},{0.002803990140617096615311466759438296988543221200869599967981719997655432266791137147598278`88.,0.000969251991852067732179989466427777714184117450208246523057415450833452500422095936836372`88.,0.0004528025139679727662513183901703682198148359437176204572134852200172730878873181210950733`88.,0.0002370658028941211616903844571001059512348327816407925943274707220042808140908416915647842`88.,0.0001369327210116191125739191739899050245004812422372345963919013122885338401252893333037564`88.,0.00006549739516655733872016393012469132831815601032062963655285301099070438316877334886111709`88.,0.00001466987427360442332265711613521530575207862891367807761142635563234968526379367552921246`88.},{True,True,True,True,True,True,True,True},{0.002361840346117831810514724051659610348495392830329981571604962058441117711306675516058234`88.,0.001722131599512235613436199405287230297942080937038081042733794830434745420521345255045602`88.,0.006825694622872344991009729229584663014433726770183827643669401428157821557584409847447073`88.,0.006160642181202765624847224620450804944862244299539568335049198009101918103876803550376345`88.,0.01421276346472800120098202677030250937731378970279554590000707447106236423083193948802482`88.,0.05809996899786618242406688275602683491053889800182824815652660884319101236891417319467368`88.,0.1299290111917377101698295955236022800430015027098862042211072724931466119282304322232291`88.}}
{{2.04164071351462194486002133229024599016`16.,0},{3.99865644899972903624999375917724493491`16.,2},{5.9987497849263010295400330330429758745`16.,4},{8.00381831004629539933101832267499198538`16.,6},{10.02044209158271601490004963846010042265`16.,8},{12.05656621127016090536417061089446300862`16.,10},{14.11997847173378000870546952600497188848`16.,12},{16.22327878872423277457205157051031138606`16.,14}}
{{2.057988904471701393972578482591550189932210730060697354430283365833881412593708173724955`88.,0.2737737552940058093638600112571814721368332848417025643778337637000378902292653431109802`88.,0.06708455486686081555881042332234755295140511581812820991613421340764849956155397277942867`88.,-0.01152608527208233606559141269722863553832781634464402470308580500928327306940791691739858`88.,-0.01079370488290205001551620872490039018151824575253452088073767633623129643857820389832971`88.,0.01849593117165312431342000268633996423643996064236464540284703974944239832288010118663842`88.,-0.01051877301514294723202564360410093816279139526218869258739684766494507899680830958199831`88.,0.002310904745310248145761218698759272586526227020474330123509184100042528747444649451651801`88.},{0.05994111743837991423748467718808973152753148280391310947819167026591458109398117803588625`88.,0.01613293476150794393936103528932133045634830936351352194961413261058545092923860467012958`88.,0.003037799344806716409054123868139496543388412795665480505750636849386737980203502430171231`88.,0.0002140210469284798632626904661283045198336224350322341458302898647350125730435195951810133`88.,0.001935338521993852983356266841210924887942023286419808156667000120881688403580007095290183`88.,0.003038387223650443937606717442913219935849817390086046887907859974710297474188211687997648`88.,0.001896601745616051458646189742486851902136281552042760099420738672630582656535974328732469`88.,0.0004602294211148073761234930313102809237037016819890049244729861332574946305251844901220428`88.},{True,True,True,True,True,True,True,True,True},{0.02912606443510791107866397605941748694177688248417267243151695795311543300989843690663325`88.,0.05892798140633595456150550027998952888673331641168566942722443018851976652138032931900548`88.,0.04528314081886176105085470525609685940874686649074539169661368386745084701302900478212087`88.,0.01856840738866182263431111063359993467814955816645003185602333096135313125662630876638088`88.,0.1793025233680011540795493488177650730128413794730400039602048746900484798621578958649528`88.,0.164273276941421478562394331310222520386376081669521871549844934875085517405360441548965`88.,0.1803063668058700059889723020790611309065667817808040208161280810143566302082600537050842`88.,0.1991555134623343150189777216010972034391064339208942437077175412157885709962828573627151`88.}}
{{3,0},{5,2},{7,4}}
{{5.295750241801324176328016567927457172176879593692830248753138220600680395064059090682347`88.,-1.5012868941758491862233141406457052761655803941074844337273610719988597724919068788851`88.,0.4699876080241150783187429902556402945193595108630878493910883340626461413082289025843704`88.},{0.01128114376920458220227440038653278133921278358786634105979292006383579472207275222578001`88.,0.005705273108684606431457875195973174241797487992723797279542469702065560380974926635146762`88.,0.001691306138338369440205603762359196116673672676370321318116883229586472672465561666682667`88.},{True,True,True,True},{0.00213022579504568081304020205443501170444012496747857673168931034540073775608336633340803`88.,0.003800255055058340283216267245189002185995672756397944360024326346144767087446285207160547`88.,0.003598618579431967643119897365792320734306424455160256443994224020453707881433200091130108`88.}}
{{2.28355612854213654672222649727395994527`16.,0},{3.93625271673697490845054948323786086327`16.,2},{6.05560353129967837199175140518228839287`16.,4},{8.34736838186589682495830403097595180718`16.,6}}
{{1.541234025556634424571176060320297675252504797787859487830052240073719858138137918920748`88.,0.3492456936723909241172553309626120414456301325707715385513358354136344217526833650918288`88.,0.02698174963448061082184541611455906903353704189124144730743042146704090691691005451866435`88.,0.002570621081444178528707958601861459459683860757921756299850287950716027647257017375425804`88.},{0.01052181287820901158203667724867821644941614816572892928680226246027818173349365691372945`88.,0.004481306403155129382492293932687378746158382545879536932408738669526820720696697063026285`88.,0.001987948404260822465766027070608388804984904169919815689933495046655904228367387280546062`88.,0.0005737384568231696067325365461429995184458239999936982422534101581267251369796510203030824`88.},{True,True,True,True,True},{0.006826875545009420384046689197985402025133952727125231842950850262193701747733216665758318`88.,0.01283138628291522467541912436469866115598122565494765823991163832986435759772512503783044`88.,0.07367752021982950152155587044639232701104519945227562535612115873753196874470414092449733`88.,0.2231905981650327620642986118077220056255553191321387706521137952441045844752788801804754`88.}}
{{2.00147997136428582559379467330940581854`16.,0},{3.99797796391808845311250372834109430557`16.,2},{5.96835440608011983655828321506353016648`16.,4},{8.22941142838979800335587228833385725072`16.,6},{10.0634506873344307960934316341412203545`16.,8}}
{{0.4275353542038350761501968623511994407249531046459367260943063614430199951299034207413412`88.,0.7483802797115199717595479176525717899073597525538184362679108946123821562151648865268374`88.,-0.05758955227166749303706242684362517945446720645933828143771749222096557296824340789403421`88.,-0.006744187136070189647378948023496945940816405480953615946670252753209803647033203898293174`88.,0.009005189342961601960150267242043464461369699849161853276804858214477137076553350886082363`88.},{0.6513662475995836803678621466287271113395339936363280166558948357323669641539109565928011`88.,0.1719404241597897596680818133749553126702705316428026676379853933514649037203111193748902`88.,0.03509736652720298259338506339572261288896753953363722787027140981628096440779287868052712`88.,0.00436590460168905791722469874218321234173606576789568745076025127323379568819127052965921`88.,0.003908235871367514494779001169613483464942235396204558206610355149274224812007870748839733`88.},{True,True,True,True,True,True},{1.523537740668420251816217812662568973645047223632373894297711128860762311689901150133687`88.,0.2297500733531728913504389326210141367567692928440012496337827221559338059103820837209093`88.,0.6094398227240592841734231243134489052273208966704037036516169303987397435126286722886763`88.,0.6473581639422082720762913181484390195697950292910475094224802261916902072713609099683259`88.,0.4339981895463604550836498929156625221899084189808514980725752039034097626780565905026028`88.}}
{{2.00958062679695580179386895520102686996`16.,0},{3.99631332265100757522540819679911787062`16.,2},{6.00918971029272947889077594501067883179`16.,4},{7.87142750324498159074894681250150901907`16.,6},{9.6249841372908732712602116923800665803`16.,8},{11.33318225830217455991685877597902033574`16.,10}}
{{2.166066035629209162094933441559767961377044349310683283031895498544859678864327245889432`88.,0.2829601413707761459616174353957985313094043965129983956089918304225096704689912125166041`88.,0.03928533950253177772345767875615310621261620339146277094999916177340731728891401631433678`88.,0.004798157349750354928992179027726725069330058091743881946166885091980406094352544783052205`88.,-0.002941377205975847224995948879808094599308853425380657779499628892212503563973146090922677`88.,0.0007922300697311265259281792365808192375025851408931085689492169868447918296882211084153747`88.},{0.02931982822161965793298467300179145648530352323929275855885692591395726132906957555111689`88.,0.002745730273289593632385214998366208412851020505968612127785166183164777874322177758924465`88.,0.01835207842609278337173395838720434124788654344304313016212935366566148940109137035015195`88.,0.02079629309635412653548186872308007803645134080557220882003256168066827558137747042638698`88.,0.01192248702869291820331506993941602484302164693610888294028942316169133926618779905129033`88.,0.002930189355364240492297366442698693475952679089286035073990804761583980455351563992865578`88.},{True,True,True,True,True,True,True},{0.0135359807777525558262501733318021639097967764646474003986258291336077253176112460340783`88.,0.009703593799423970888739933403278663408097507549524194660998416262930392137159287354928254`88.,0.467148271046762057014831104624685241628052030364603839683073944931184832968680716504492`88.,4.33422490770048306571868096772294866200420248255918779805829879687962928682212856432471`88.,4.053368947196097334380820262601386666533402779232719445051440097121203341702459820976473`88.,3.698659603211869942303558394914739207968985613926749215479562427922920085775587651188266`88.}}
{{1.99450751474619807298481792526968984989`16.,0},{4.00466096787348015036828934390211713768`16.,2},{6.00215050925207777697687880858338410642`16.,4},{7.99923304796167224466627887647622060897`16.,6},{9.99987376803706316495479396484387243913`16.,8},{12.00402000752427992155283883109281346501`16.,10},{14.00538230121678420827776192059708936874`16.,12}}
{{3.534398761111513781267723701067490000376179099044783185285164534761419078789822529435657`88.,-0.0348155988265903121443557092095277760936050810846947214517011381769933502749983814625613`88.,0.05792913028860826294500546993158807695983554668213572575877285398240845327071325441360472`88.,0.05544390458458988503202763401282846380546583899513454414985658375863430564430241138951134`88.,-0.02077958063286012637376669621213730000610390818847568104912413293329165938376478507627394`88.,-0.008365160107268064148613711344732040346761757251497597118402010244056771183255135472208132`88.,0.005655437177184324387804139661573462697027120284097481001459700473882206285829793905501256`88.},{0.01458217969774832020581938073186321835277112668276477239309591459344227237737683882356749`88.,0.006105488724002264695004302064311693351570392181639174484815325287932760688617030871796345`88.,0.004597541582058902205902892234442212695443011416878943789476307480676890552374627290805535`88.,0.003334728026948388963631820076405406792275357161859132382806307314940975415879358285763959`88.,0.001705497731403315185561696181333651086364027700383001389621268996839961162430677343461077`88.,0.0004981643494078141962899130649185687110153407688504907919120053843998843261596753418788697`88.,0.00005687984809337745512889301838052476073833342192468527605854088160192490240399435977906621`88.},{True,True,True,True,True,True,True,True},{0.004125787915668703459754999403446148511011905388511974970456040287879866966895012282386112`88.,0.1753664716328020035270453533654802251760094690675886565756533650892679851555226500184827`88.,0.07936493365520121853944060383039316893924176451335632476524037375339240952359224128644427`88.,0.06014598091410837331935856782460492676915758136562729686684014275126542900510076093449276`88.,0.0820756569411366621261847674788184502933116348650078696032547697940728538485705882735678`88.,0.05955227909803954757652685485414175890561009393216437080288397237672338210728936085901849`88.,0.01005755104536343843284239840213902947826999757321126713853579774205426450832633519009975`88.}}
{{2.03123136977995521857794136800338307853`16.,0},{3.99954514568234842593870682835242991293`16.,2},{5.99954212771032455907049046285338678516`16.,4},{8.00036746917984322173870014422262084256`16.,6},{10.00227681766313196725361808373538725768`16.,8},{12.00385894039269072027545268181563353452`16.,10},{14.00444555366047368763896179991047858464`16.,12},{16.00400028377452296033393190736543280392`16.,14}}
{{1.529412689679270161277843356966012266313710468967685670269474083167649449935993176079999`88.,0.4586165304995230885620508842094846880424065454493588480578777703530935448174153139513156`88.,-0.01496971347882406307413195874739227188447896170599224165300374416379815565186597140181371`88.,0.01747240330127199558282248152627943840196269304488037097629445479330172393531004127819037`88.,-0.01314117399844577859273221373370790787718290827178868063948684308900673840396025218101162`88.,0.01662613322487719003956318201570813117855665494541735742150592334178678796556197667281162`88.,-0.01166798933563362144927131392270748812796580508043565851047501598229456103013334432934731`88.,0.003320810518536768494053575079001708492539571905704985888082648241394100233806184017151599`88.},{0.06283034528191293498464884357664139638304089991474503480500195149428389718929011188787405`88.,0.004746349950886667085268821737104682923375090615840902241646776262038635105709043560661578`88.,0.02334685425188205009999888044272038141991139782505791668146994331638892331402942003055439`88.,0.04402278131400327507149656972378403714338509293388634327029436926343258601999093039276303`88.,0.06044745199445994813078909762674894116290612657317030672831722032645349486003013049446458`88.,0.0607884632416813963685261535612186782485354246400139074638168539014221349368011990289327`88.,0.03707630254211091493206628996327845939232607660353458887911056026115717309543390410790201`88.,0.00996121981571735867514306497365286154694769531972983839384571344718379396829234725456175`88.},{True,True,True,True,True,True,True,True,True},{0.04108135476180006801950144746542866750546199135073157024594642727697417718623818441136822`88.,0.01034927795933775826752966244878966192461195729202195047697610427740701475244836487524903`88.,1.559605952706320490617022062955524069981233403071497725957010188904640414696081084388897`88.,2.519560735574275860790892368919844020676678030056816022770733476981274767646821822658379`88.,4.599851733308541243343636153379897357161259627510216141485806033645674066989026150791102`88.,3.656199695953682225383186247055092358042670829719364179862350850331153794017185591812756`88.,3.177608538677800737342922835170082462780216945427318782171959715953852842425681542509589`88.,2.999635107186579037433743360262918260488521567376413118363975208358778908537718938326237`88.}}
